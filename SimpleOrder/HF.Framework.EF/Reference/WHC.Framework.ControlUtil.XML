<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WHC.Framework.ControlUtil</name>
    </assembly>
    <members>
        <member name="T:WHC.Framework.ControlUtil.OperationLogEventHandler">
            <summary>
            定义一个记录操作日志的事件处理
            </summary>
            <param name="userId">操作的用户ID</param>
            <param name="tableName">操作表名称</param>
            <param name="operationType">操作类型：增加、修改、删除</param>
            <param name="note">操作的详细记录信息</param>
            <returns></returns>
        </member>
        <member name="T:WHC.Framework.ControlUtil.AbstractBaseDAL`1">
            <summary>
            数据访问层的超级基类，所有数据库的数据访问基类都继承自这个超级基类，包括Oracle、SqlServer、Sqlite、MySql、Access等
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.#ctor(System.String,System.String)">
            <summary>
            指定表名以及主键,对基类进构造
            </summary>
            <param name="tableName">表名</param>
            <param name="primaryKey">表主键</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.SetDbConfigName(System.String)">
            <summary>
            设置数据库配置项名称
            </summary>
            <param name="dbConfigName">数据库配置项名称</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.CreateDatabase">
            <summary>
            根据配置数据库配置名称生成Database对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetSubValue(System.String,System.String)">
            <summary>
            获取指定字符串中的子项的值
            </summary>
            <param name="connectionString">字符串值</param>
            <param name="subKeyName">以分号(;)为分隔符的子项名称</param>
            <returns>对应子项名称的值（即是=号后面的值）</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetSafeFileName(System.String)">
            <summary>
            生成防止和保留字、关键字同名的字段格式，如[value]。
            </summary>
            <param name="fieldName">字段名，如value</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.Insert(System.Collections.Hashtable,System.Data.Common.DbTransaction)">
            <summary>
            添加记录
            </summary>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.Insert(System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            添加记录
            </summary>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.Insert2(System.Collections.Hashtable,System.Data.Common.DbTransaction)">
            <summary>
            添加记录
            </summary>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.Insert2(System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            添加记录
            </summary>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.Update(System.Object,System.Collections.Hashtable,System.Data.Common.DbTransaction)">
            <summary>
            更新某个表一条记录(只适用于用单键,用int类型作键值的表)
            </summary>
            <param name="id">ID值</param>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.Update(System.Object,System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            更新某个表一条记录(只适用于用单键,用int类型作键值的表)
            </summary>
            <param name="id">ID值</param>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.PrivateUpdate(System.Object,System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            更新某个表一条记录
            </summary>
            <param name="id">ID值</param>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.SqlValueList(System.String,System.Data.Common.DbTransaction)">
            <summary>
            执行SQL查询语句，返回查询结果的所有记录的第一个字段,用逗号分隔。
            </summary>
            <param name="sql">SQL语句</param>
            <param name="trans">事务对象</param>
            <returns>
            返回查询结果的所有记录的第一个字段,用逗号分隔。
            </returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.SqlExecute(System.String,System.Data.Common.DbTransaction)">
            <summary>
            执行一些特殊的语句
            </summary>
            <param name="sql">SQL语句</param>
            <param name="trans">事务对象</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.StoreProcExecute(System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            执行存储过程函数。
            </summary>
            <param name="storeProcName">存储过程函数</param>
            <param name="parameters">参数集合</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.SqlTable(System.String,System.Data.Common.DbTransaction)">
            <summary>
            执行SQL查询语句，返回所有记录的DataTable集合。
            </summary>
            <param name="sql">SQL查询语句</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.SqlTable(System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            执行SQL查询语句，返回所有记录的DataTable集合。
            </summary>
            <param name="sql">SQL查询语句</param>
            <param name="parameters">参数集合</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.CreateTransaction">
            <summary>
            打开数据库连接，并创建事务对象
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.CreateTransaction(System.Data.IsolationLevel)">
            <summary>
            打开数据库连接，并创建事务对象
            </summary>
            <param name="level">事务级别</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.TestConnection(System.String)">
            <summary>
            测试数据库是否正常连接
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.Insert(`0,System.Data.Common.DbTransaction)">
            <summary>
            插入指定对象到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回true或false</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.Insert2(`0,System.Data.Common.DbTransaction)">
            <summary>
            插入指定对象到数据库中,并返回自增长的键值
            </summary>
            <param name="obj">指定的对象</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回True</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.Update(`0,System.Object,System.Data.Common.DbTransaction)">
            <summary>
            更新对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.Update(System.Data.CommandType,System.String,System.Data.Common.DbTransaction)">
            <summary>
            更新数据
            </summary>
            <param name="commandType">数据类型</param>
            <param name="sql">sql</param>
            <param name="trans">事务对象</param>
            <returns>bool</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.InsertUpdate(`0,System.Object,System.Data.Common.DbTransaction)">
            <summary>
            插入或更新对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.InsertIfNew(`0,System.Object,System.Data.Common.DbTransaction)">
            <summary>
            如果不存在记录，则插入对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <param name="trans">事务对象</param>
            <returns>执行插入成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.FindByID(System.Object,System.Data.Common.DbTransaction)">
            <summary>
            查询数据库,检查是否存在指定ID的对象
            </summary>
            <param name="key">对象的ID值</param>
            <param name="trans">事务对象</param>
            <returns>存在则返回指定的对象,否则返回Null</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.PrivateFindByID(System.Object,System.Data.Common.DbTransaction)">
            <summary>
            提供对FindByID的私有方法实现
            </summary>
            <param name="key">主键的值</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetEntity(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            封装通用获取实体对象的私有方法
            </summary>
            <param name="db">Database对象</param>
            <param name="command">DbCommand对象</param>
            <param name="trans">事务对象，可为空</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.FindSingle(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,如果存在返回第一个对象
            </summary>
            <param name="condition">查询的条件</param>
            <param name="trans">事务对象</param>
            <returns>指定的对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.FindSingle(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,如果存在返回第一个对象
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <param name="trans">事务对象</param>
            <returns>指定的对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.FindSingle(System.String,System.String,System.Data.IDbDataParameter[],System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,如果存在返回第一个对象
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <param name="paramList">参数列表</param>
            <param name="trans">事务对象</param>
            <returns>指定的对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.FindFirst(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最旧的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.FindLast(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最新的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.FindByIDs(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据ID字符串(逗号分隔)获取对象列表
            </summary>
            <param name="idString">ID字符串(逗号分隔)</param>
            <param name="trans">事务对象</param>
            <returns>符合条件的对象列表</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.Find(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合
            </summary>
            <param name="condition">查询的条件</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.Find(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">排序条件</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.Find(System.String,System.String,System.Data.IDbDataParameter[],System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <param name="paramList">参数列表</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetList(System.String,System.Data.IDbDataParameter[],System.Data.Common.DbTransaction)">
            <summary>
            通用获取集合对象方法
            </summary>
            <param name="sql">查询的Sql语句</param>
            <param name="paramList">参数列表，如果没有则为null</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetListWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.Data.IDbDataParameter[],System.Data.Common.DbTransaction)">
            <summary>
            以分页方式通用获取集合对象方法
            </summary>
            <param name="sql">查询的Sql语句</param>
            <param name="info">分页实体</param>
            <param name="paramList">参数列表，如果没有则为null</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetAll(System.Data.Common.DbTransaction)">
            <summary>
            返回数据库所有的对象集合
            </summary>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetAll(System.String,System.Data.Common.DbTransaction)">
            <summary>
            返回数据库所有的对象集合
            </summary>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetAll(WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            返回数据库所有的对象集合(用于分页数据显示)
            </summary>
            <param name="info">分页实体信息</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetAll(WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            返回数据库所有的对象集合(用于分页数据显示)
            </summary>
            <param name="info">分页实体信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetAllToDataTable(System.Data.Common.DbTransaction)">
            <summary>
            返回所有记录到DataTable集合中
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetAllToDataTable(System.String,System.Data.Common.DbTransaction)">
            <summary>
            返回所有记录到DataTable集合中
            </summary>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetAllToDataTable(WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            根据分页条件，返回DataTable对象
            </summary>
            <param name="info">分页条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetAllToDataTable(WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据分页条件，返回DataTable对象
            </summary>
            <param name="info">分页条件</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.FindToDataTable(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据查询条件，返回记录到DataTable集合中
            </summary>
            <param name="condition">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.FindToDataTable(System.String,WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            根据查询条件，返回记录到DataTable集合中
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.FindToDataTable(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回DataTable集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定DataTable的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetDataTableBySql(System.String,System.Data.Common.DbTransaction)">
            <summary>
            操根据条件返回DataTable记录辅助类
            </summary>
            <param name="sql"></param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetFieldList(System.String,System.Data.Common.DbTransaction)">
            <summary>
            获取某字段数据字典列表
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetFieldListByCondition(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件，获取某字段数据字典列表
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.FindByView(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.FindByView(System.String,System.String,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="sortField">排序字段</param>
            <param name="isDescending">是否为降序</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetTopResult(System.String,System.Int32,System.String,System.Data.Common.DbTransaction)">
            <summary>
            获取前面记录指定数量的记录
            </summary>
            <param name="sql">查询语句</param>
            <param name="count">指定数量</param>
            <param name="orderBy">排序条件，例如order by id</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.FindByViewWithPager(System.String,System.String,System.String,System.Boolean,WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="sortField">排序字段</param>
            <param name="isDescending">是否为降序</param>
            <param name="info">分页条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.DataReaderToEntity(System.Data.IDataReader)">
            <summary>
            将DataReader的属性值转化为实体类的属性值，返回实体类
            (提供了默认的反射机制获取信息，为了提高性能，建议重写该函数)
            </summary>
            <param name="dr">有效的DataReader对象</param>
            <returns>实体类对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetHashByEntity(`0)">
            <summary>
            将实体对象的属性值转化为Hashtable对应的键值(用于插入或者更新操作)
            (提供了默认的反射机制获取信息，为了提高性能，建议重写该函数)
            </summary>
            <param name="obj">有效的实体对象</param>
            <returns>包含键值映射的Hashtable</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetRecordCount(System.Data.Common.DbTransaction)">
            <summary>
            获取表的所有记录数量
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetRecordCount(System.String,System.Data.Common.DbTransaction)">
            <summary>
            获取表的所有记录数量
            </summary>
            <param name="condition">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetExecuteScalarValue(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            获取单一的记录值
            </summary>
            <param name="db">Database对象</param>
            <param name="command">DbCommand对象</param>
            <param name="trans">DbTransaction对象，可为空</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.IsExistRecord(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据condition条件，判断是否存在记录
            </summary>
            <param name="condition">查询的条件</param>
            <param name="trans">事务对象</param>
            <returns>如果存在返回True，否则False</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.IsExistKey(System.Collections.Hashtable,System.Data.Common.DbTransaction)">
            <summary>
            查询数据库,检查是否存在指定键值的对象
            </summary>
            <param name="recordTable">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="trans">事务对象</param>
            <returns>存在则返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.IsExistKey(System.String,System.Object,System.Data.Common.DbTransaction)">
            <summary>
            查询数据库,检查是否存在指定键值的对象
            </summary>
            <param name="fieldName">指定的属性名</param>
            <param name="key">指定的值</param>
            <param name="trans">事务对象</param>
            <returns>存在则返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetMaxID(System.Data.Common.DbTransaction)">
            <summary>
            获取数据库中该对象的最大ID值
            </summary>
            <param name="trans">事务对象</param>
            <returns>最大ID值</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetFieldValue(System.Object,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据主键和字段名称，获取对应字段的内容
            </summary>
            <param name="key">指定对象的ID</param>
            <param name="fieldName">字段名称</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.Delete(System.Object,System.Data.Common.DbTransaction)">
            <summary>
            根据指定对象的ID,从数据库中删除指定对象
            </summary>
            <param name="key">指定对象的ID</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.DeleteByUser(System.Object,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据指定对象的ID和用户ID,从数据库中删除指定对象(用于记录人员的操作日志）
            </summary>
            <param name="key">指定对象的ID</param>
            <param name="userId">用户ID</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.DeleteByCondition(System.String,System.Data.Common.DbTransaction,System.Data.IDbDataParameter[])">
            <summary>
            根据指定条件,从数据库中删除指定对象
            </summary>
            <param name="condition">删除记录的条件语句</param>
            <param name="trans">事务对象</param>
            <param name="paramList">Sql参数列表</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.OperationLogOfInsert(`0,System.Data.Common.DbTransaction)">
            <summary>
            插入操作的日志记录
            </summary>
            <param name="obj">数据对象</param>
            <param name="trans">事务对象</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.OperationLogOfUpdate(`0,System.Object,System.Data.Common.DbTransaction)">
            <summary>
            修改操作的日志记录
            </summary>
            <param name="id">记录ID</param>
            <param name="obj">数据对象</param>
            <param name="trans">事务对象</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.OperationLogOfDelete(System.Object,System.String,System.Data.Common.DbTransaction)">
            <summary>
            删除操作的日志记录
            </summary>
            <param name="id">记录ID</param>
            <param name="userId">用户ID</param>
            <param name="trans">事务对象</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.TypeToDbType(System.Type)">
            <summary>
            转换.NET的对象类型到数据库类型
            </summary>
            <param name="t">.NET的对象类型</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.InitTableName(System.String)">
            <summary>
            初始化数据库表名
            </summary>
            <param name="tableName">数据库表名</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.HasInjectionData(System.String)">
            <summary>
            验证是否存在注入代码(条件语句）
            </summary>
            <param name="inputData"></param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetRegexString">
            <summary>
            获取正则表达式
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetTableNames">
            <summary>
            获取数据库的全部表名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetFieldTypeList">
            <summary>
            获取表的字段名称和数据类型列表。
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetReaderSchema(System.String)">
            <summary>
            获取指定表的元数据，包括字段名称、类型等等
            </summary>
            <param name="tableName">数据库表名</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetColumnNameAlias">
            <summary>
            获取字段中文别名（用于界面显示）的字典集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.GetReportData(System.String,System.String)">
            <summary>
            获取指定字段的报表数据
            </summary>
            <param name="fieldName">表字段</param>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.StorePorcExecute(System.String,System.Collections.Hashtable,System.Collections.Hashtable,System.Data.Common.DbTransaction)">
            <summary>
            执行存储过程，如果影响记录数，返回True，否则为False，修改并输出外部参数outParameters（如果有）。
            </summary>
            <param name="storeProcName">存储过程名称</param>
            <param name="inParameters">输入参数，可为空</param>
            <param name="outParameters">输出参数，可为空</param>
            <param name="trans">事务对象，可为空</param>
            <returns>如果影响记录数，返回True，否则为False</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.StorePorcToList(System.String,System.Collections.Hashtable,System.Collections.Hashtable,System.Data.Common.DbTransaction)">
            <summary>
            执行存储过程，返回实体列表集合，修改并输出外部参数outParameters（如果有）。
            </summary>
            <param name="storeProcName">存储过程名称</param>
            <param name="inParameters">输入参数，可为空</param>
            <param name="outParameters">输出参数，可为空</param>
            <param name="trans">事务对象，可为空</param>
            <returns>返回实体列表集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.StorePorcToDataTable(System.String,System.Collections.Hashtable,System.Collections.Hashtable,System.Data.Common.DbTransaction)">
            <summary>
            执行存储过程，返回DataTable集合，修改并输出外部参数outParameters（如果有）。
            </summary>
            <param name="storeProcName">存储过程名称</param>
            <param name="inParameters">输入参数，可为空</param>
            <param name="outParameters">输出参数，可为空</param>
            <param name="trans">事务对象，可为空</param>
            <returns>返回DataTable集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.StorePorcToEntity(System.String,System.Collections.Hashtable,System.Collections.Hashtable,System.Data.Common.DbTransaction)">
            <summary>
            执行存储过程，返回实体对象，修改并输出外部参数outParameters（如果有）。
            </summary>
            <param name="storeProcName">存储过程名称</param>
            <param name="inParameters">输入参数，可为空</param>
            <param name="outParameters">输出参数，可为空</param>
            <param name="trans">事务对象，可为空</param>
            <returns>返回实体对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.SetStoreParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            传入输入参数和输出参数到Database和DbCommand对象。
            </summary>
            <param name="db">Database对象</param>
            <param name="command">DbCommand对象</param>
            <param name="inParameters">输入参数的哈希表</param>
            <param name="outParameters">输出参数的哈希表</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AbstractBaseDAL`1.EditOutParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand,System.Collections.Hashtable)">
            <summary>
            执行存储过程后，获取需要输出的参数值，修改存储在哈希表里
            </summary>
            <param name="db">Database对象</param>
            <param name="command">DbCommand对象</param>
            <param name="outParameters">输出参数的哈希表</param>
        </member>
        <member name="P:WHC.Framework.ControlUtil.AbstractBaseDAL`1.DbConfigName">
            <summary>
            数据库配置名称，默认为空。
            可在子类指定不同的配置名称，用于访问不同的数据库
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.AbstractBaseDAL`1.ParameterPrefix">
            <summary>
            数据库参数化访问的占位符
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.AbstractBaseDAL`1.SafeFieldFormat">
            <summary>
            防止和保留字、关键字同名的字段格式，如[value]。
            不同数据库类型的BaseDAL需要进行修改
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.AbstractBaseDAL`1.SortField">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.AbstractBaseDAL`1.IsDescending">
            <summary>
            是否为降序
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.AbstractBaseDAL`1.SelectedFields">
            <summary>
            选择的字段，默认为所有(*)
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.AbstractBaseDAL`1.TableName">
            <summary>
            数据库访问对象的表名
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.AbstractBaseDAL`1.PrimaryKey">
            <summary>
            数据库访问对象的外键约束
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.BaseBLL`1">
            <summary>
            业务基类对象
            </summary>
            <typeparam name="T">业务对象类型</typeparam>
        </member>
        <member name="F:WHC.Framework.ControlUtil.BaseBLL`1.bllFullName">
            <summary>
            BLL业务类的全名（子类必须实现），可使用this.GetType().FullName
            </summary>
        </member>
        <member name="F:WHC.Framework.ControlUtil.BaseBLL`1.dalAssemblyName">
            <summary>
            数据访问层程序集的清单文件的文件名，不包括其扩展名，可使用Assembly.GetExecutingAssembly().GetName().Name
            </summary>
        </member>
        <member name="F:WHC.Framework.ControlUtil.BaseBLL`1.bllPrefix">
            <summary>
            BLL命名空间的前缀（BLL.)
            </summary>
        </member>
        <member name="F:WHC.Framework.ControlUtil.BaseBLL`1.baseDal">
            <summary>
            基础数据访问层接口对象
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.#ctor">
            <summary>
            默认构造函数，调用后需手动调用一次 Init() 方法进行对象初始化
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.Init(System.String,System.String,System.String,System.String)">
            <summary>
            参数赋值后，初始化相关对象
            </summary>
            <param name="bllFullName">BLL业务类的全名（子类必须实现）,子类构造函数传入this.GetType().FullName</param>
            <param name="dalAssemblyName">数据访问层程序集的清单文件的文件名，不包括其扩展名。设置为NULL或默认为Assembly.GetExecutingAssembly().GetName().Name</param>
            <param name="bllPrefix">BLL命名空间的前缀（BLL.)</param>
            <param name="dbConfigName">数据库配置项名称</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.GetDALPrefix(System.String)">
            <summary>
            根据不同的数据库类型，构造相应的DAL层名称前缀
            </summary>
            <param name="dbType">数据库类型：如sqlserver/access/sqlite/mysql</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.SetConfigName(System.String,System.String)">
            <summary>
            根据参数信息，重新初始化数据访问层（例：可以指定不同的数据访问层）
            </summary>
            <param name="dbConfigName">数据库配置项名称</param>
            <param name="componentDbType">数据库类型，默认从ComponentDbType中读取，如果dbConfigName指定不同类型的数据库连接，需要指定componentDbType。</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.CheckDAL">
            <summary>
            调用前检查baseDal是否为空引用
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.Insert(`0,System.Data.Common.DbTransaction)">
            <summary>
            插入指定对象到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="trans">事务对象</param>
            <returns>执行操作是否成功。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.Insert2(`0,System.Data.Common.DbTransaction)">
            <summary>
            插入指定对象到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回新增记录的自增长ID。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.Update(`0,System.Object,System.Data.Common.DbTransaction)">
            <summary>
            更新对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.Update(System.Data.CommandType,System.String,System.Data.Common.DbTransaction)">
            <summary>
            更新数据到数据表中
            </summary>
            <param name="commandType">SQL类型</param>
            <param name="sql">sql或者存储过程</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.Update(System.Object,System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            更新某个表一条记录(只适用于用单键,用string类型作键值的表)
            </summary>
            <param name="id">ID号</param>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.InsertUpdate(`0,System.Object,System.Data.Common.DbTransaction)">
            <summary>
            插入或更新对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.InsertIfNew(`0,System.Object,System.Data.Common.DbTransaction)">
            <summary>
            如果不存在记录，则插入对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <param name="trans">事务对象</param>
            <returns>执行插入成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.SqlValueList(System.String,System.Data.Common.DbTransaction)">
            <summary>
            执行SQL查询语句，返回查询结果的所有记录的第一个字段,用逗号分隔。
            </summary>
            <param name="sql">SQL语句</param>
            <param name="trans">事务对象</param>
            <returns>
            返回查询结果的所有记录的第一个字段,用逗号分隔。
            </returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.SqlTable(System.String,System.Data.Common.DbTransaction)">
            <summary>
            执行SQL查询语句，返回所有记录的DataTable集合。
            </summary>
            <param name="sql">SQL查询语句</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.SqlTable(System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            执行SQL查询语句，返回所有记录的DataTable集合。
            </summary>
            <param name="sql">SQL查询语句</param>
            <param name="parameters">参数集合</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.FindByID(System.Object,System.Data.Common.DbTransaction)">
            <summary>
            查询数据库,检查是否存在指定ID的对象
            </summary>
            <param name="key">对象的ID值</param>
            <param name="trans">事务对象</param>
            <returns>存在则返回指定的对象,否则返回Null</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.FindSingle(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,如果存在返回第一个对象
            </summary>
            <param name="condition">查询的条件</param>
            <param name="trans">事务对象</param>
            <returns>指定的对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.FindSingle(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,如果存在返回第一个对象
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">排序条件</param>
            <param name="trans">事务对象</param>
            <returns>指定的对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.FindFirst(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最旧的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.FindLast(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最新的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.FindByIDs(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据ID字符串(逗号分隔)获取对象列表
            </summary>
            <param name="idString">ID字符串(逗号分隔)</param>
            <param name="trans">事务对象</param>
            <returns>符合条件的对象列表</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.Find(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合
            </summary>
            <param name="condition">查询的条件</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.Find(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">排序条件</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.GetAll(System.Data.Common.DbTransaction)">
            <summary>
            返回数据库所有的对象集合
            </summary>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.GetAll(System.String,System.Data.Common.DbTransaction)">
            <summary>
            返回数据库所有的对象集合
            </summary>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.GetAll(WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            返回数据库所有的对象集合(用于分页数据显示)
            </summary>
            <param name="info">分页实体信息</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.GetAll(WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            返回数据库所有的对象集合(用于分页数据显示)
            </summary>
            <param name="info">分页实体信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.GetAllToDataTable(System.Data.Common.DbTransaction)">
            <summary>
            返回所有记录到DataTable集合中
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.GetAllToDataTable(System.String,System.Data.Common.DbTransaction)">
            <summary>
            返回所有记录到DataTable集合中
            </summary>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.GetAllToDataTable(WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            根据分页条件，返回DataSet对象
            </summary>
            <param name="info">分页条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.GetAllToDataTable(WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据分页条件，返回DataSet对象
            </summary>
            <param name="info">分页条件</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <param name="desc">是否降序</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.FindToDataTable(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据查询条件，返回记录到DataTable集合中
            </summary>
            <param name="condition">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.FindToDataTable(System.String,WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            根据查询条件，返回记录到DataTable集合中
            </summary>
            <param name="condition">查询条件</param>
            <param name="pagerInfo">分页条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.FindToDataTable(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回DataTable集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定DataTable的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.GetFieldList(System.String,System.Data.Common.DbTransaction)">
            <summary>
            获取字段列表
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.GetFieldListByCondition(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件，获取某字段数据字典列表
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.FindByView(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.FindByView(System.String,System.String,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="sortField">排序字段</param>
            <param name="isDescending">是否为降序</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.FindByViewWithPager(System.String,System.String,System.String,System.Boolean,WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="sortField">排序字段</param>
            <param name="isDescending">是否为降序</param>
            <param name="info">分页条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.GetRecordCount(System.Data.Common.DbTransaction)">
            <summary>
            获取表的所有记录数量
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.GetRecordCount(System.String,System.Data.Common.DbTransaction)">
            <summary>
            获取表的指定条件记录数量
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.IsExistRecord(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据condition条件，判断是否存在记录
            </summary>
            <param name="condition">查询的条件</param>
            <param name="trans">事务对象</param>
            <returns>如果存在返回True，否则False</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.IsExistKey(System.String,System.Object,System.Data.Common.DbTransaction)">
            <summary>
            查询数据库,检查是否存在指定键值的对象
            </summary>
            <param name="fieldName">指定的属性名</param>
            <param name="key">指定的值</param>
            <param name="trans">事务对象</param>
            <returns>存在则返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.GetFieldValue(System.Object,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据主键和字段名称，获取对应字段的内容
            </summary>
            <param name="key">指定对象的ID</param>
            <param name="fieldName">字段名称</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.Delete(System.Object,System.Data.Common.DbTransaction)">
            <summary>
            根据指定对象的ID,从数据库中删除指定对象
            </summary>
            <param name="key">指定对象的ID</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.DeleteByCondition(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据指定条件,从数据库中删除指定对象
            </summary>
            <param name="condition">删除记录的条件语句</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.CreateTransaction">
            <summary>
            打开数据库连接，并创建事务对象
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.CreateTransaction(System.Data.IsolationLevel)">
            <summary>
            打开数据库连接，并创建事务对象
            </summary>
            <param name="level">事务级别</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.InitTableName(System.String)">
            <summary>
            初始化数据库表名
            </summary>
            <param name="tableName">数据库表名</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.GetFieldTypeList">
            <summary>
            获取表的字段名称和数据类型列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.GetColumnNameAlias">
            <summary>
            获取字段中文别名（用于界面显示）的字典集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseBLL`1.GetReportData(System.String,System.String)">
            <summary>
            获取指定字段的报表数据
            </summary>
            <param name="fieldName">表字段</param>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:WHC.Framework.ControlUtil.BaseDALSQLite`1">
            <summary>
            数据访问层的基类
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.IBaseDAL`1">
            <summary>
            数据访问层的接口
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetRecordCount(System.Data.Common.DbTransaction)">
            <summary>
            获取表的所有记录数量
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetRecordCount(System.String,System.Data.Common.DbTransaction)">
            <summary>
            获取表的指定条件记录数量
            </summary>
            <param name="condition">条件语句</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.IsExistRecord(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据condition条件，判断是否存在记录
            </summary>
            <param name="condition">查询的条件</param>
            <param name="trans">事务对象</param>
            <returns>如果存在返回True，否则False</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.IsExistKey(System.Collections.Hashtable,System.Data.Common.DbTransaction)">
            <summary>
            查询数据库,检查是否存在指定键值的对象
            </summary>
            <param name="recordTable">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="trans">事务对象</param>
            <returns>存在则返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.IsExistKey(System.String,System.Object,System.Data.Common.DbTransaction)">
            <summary>
            查询数据库,检查是否存在指定键值的对象
            </summary>
            <param name="fieldName">指定的属性名</param>
            <param name="key">指定的值</param>
            <param name="trans">事务对象</param>
            <returns>存在则返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetMaxID(System.Data.Common.DbTransaction)">
            <summary>
            获取数据库中该对象的最大ID值
            </summary>
            <param name="trans">事务对象</param>
            <returns>最大ID值</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetFieldValue(System.Object,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据主键和字段名称，获取对应字段的内容
            </summary>
            <param name="key">指定对象的ID</param>
            <param name="fieldName">字段名称</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.Delete(System.Object,System.Data.Common.DbTransaction)">
            <summary>
            根据指定对象的ID,从数据库中删除指定对象
            </summary>
            <param name="key">指定对象的ID</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.DeleteByCondition(System.String,System.Data.Common.DbTransaction,System.Data.IDbDataParameter[])">
            <summary>
            根据指定条件,从数据库中删除指定对象
            </summary>
            <param name="condition">删除记录的条件语句</param>
            <param name="trans">事务对象</param>
            <param name="paramList">Sql参数列表</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.Insert(`0,System.Data.Common.DbTransaction)">
            <summary>
            插入指定对象到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回True</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.Insert2(`0,System.Data.Common.DbTransaction)">
            <summary>
            插入指定对象到数据库中,并返回自增长的键值
            </summary>
            <param name="obj">指定的对象</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回True</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.Update(`0,System.Object,System.Data.Common.DbTransaction)">
            <summary>
            更新对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.Update(System.Object,System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            更新某个表一条记录(只适用于用单键,用string类型作键值的表)
            </summary>
            <param name="id">ID值</param>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.InsertUpdate(`0,System.Object,System.Data.Common.DbTransaction)">
            <summary>
            插入或更新对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键值</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.InsertIfNew(`0,System.Object,System.Data.Common.DbTransaction)">
            <summary>
            如果不存在记录，则插入对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键值</param>
            <param name="trans">事务对象</param>
            <returns>执行插入成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.SqlValueList(System.String,System.Data.Common.DbTransaction)">
            <summary>
            执行SQL查询语句，返回查询结果的所有记录的第一个字段,用逗号分隔。
            </summary>
            <param name="sql">SQL语句</param>
            <param name="trans">事务对象</param>
            <returns>
            返回查询结果的所有记录的第一个字段,用逗号分隔。
            </returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.SqlExecute(System.String,System.Data.Common.DbTransaction)">
            <summary>
            执行一些特殊的语句
            </summary>
            <param name="sql">SQL语句</param>
            <param name="trans">事务对象</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.StoreProcExecute(System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            执行存储过程函数。
            </summary>
            <param name="storeProcName">存储过程函数</param>
            <param name="parameters">参数集合</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.SqlTable(System.String,System.Data.Common.DbTransaction)">
            <summary>
            执行SQL查询语句，返回所有记录的DataTable集合。
            </summary>
            <param name="sql">SQL查询语句</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.SqlTable(System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            执行SQL查询语句，返回所有记录的DataTable集合。
            </summary>
            <param name="sql">SQL查询语句</param>
            <param name="parameters">SQL查询参数</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.CreateTransaction">
            <summary>
            打开数据库连接，并创建事务对象
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.CreateTransaction(System.Data.IsolationLevel)">
            <summary>
            打开数据库连接，并创建事务对象
            </summary>
            <param name="level">事务级别</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.TestConnection(System.String)">
            <summary>
            测试数据库是否正常连接
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.Update(System.Data.CommandType,System.String,System.Data.Common.DbTransaction)">
            <summary>
            执行sql语句
            </summary>
            <param name="commandType">执行类型</param>
            <param name="sql">sql语句或存储过程</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.FindByID(System.Object,System.Data.Common.DbTransaction)">
            <summary>
            查询数据库,检查是否存在指定ID的对象
            </summary>
            <param name="key">对象的ID值</param>
            <param name="trans">事务对象</param>
            <returns>存在则返回指定的对象,否则返回Null</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.FindSingle(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,如果存在返回第一个对象
            </summary>
            <param name="condition">查询的条件</param>
            <param name="trans">事务对象</param>
            <returns>指定的对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.FindSingle(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,如果存在返回第一个对象
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <param name="trans">事务对象</param>
            <returns>指定的对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.FindSingle(System.String,System.String,System.Data.IDbDataParameter[],System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,如果存在返回第一个对象
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <param name="paramList">参数列表</param>
            <param name="trans">事务对象</param>
            <returns>指定的对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.FindLast(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最新的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.FindFirst(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最旧的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.FindByIDs(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据ID字符串(逗号分隔)获取对象列表
            </summary>
            <param name="idString">ID字符串(逗号分隔)</param>
            <param name="trans">事务对象</param>
            <returns>符合条件的对象列表</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.Find(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合
            </summary>
            <param name="condition">查询的条件</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.Find(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.Find(System.String,System.String,System.Data.IDbDataParameter[],System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <param name="paramList">参数列表</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetList(System.String,System.Data.IDbDataParameter[],System.Data.Common.DbTransaction)">
            <summary>
            通用获取集合对象方法
            </summary>
            <param name="sql">查询的Sql语句</param>
            <param name="paramList">参数列表，如果没有则为null</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetListWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.Data.IDbDataParameter[],System.Data.Common.DbTransaction)">
            <summary>
            以分页方式通用获取集合对象方法
            </summary>
            <param name="sql">查询的Sql语句</param>
            <param name="info">分页实体</param>
            <param name="paramList">参数列表，如果没有则为null</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetAll(System.Data.Common.DbTransaction)">
            <summary>
            返回数据库所有的对象集合
            </summary>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetAll(System.String,System.Data.Common.DbTransaction)">
            <summary>
            返回数据库所有的对象集合
            </summary>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetAll(WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            返回数据库所有的对象集合(用于分页数据显示)
            </summary>
            <param name="info">分页实体信息</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetAll(WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            返回数据库所有的对象集合(用于分页数据显示)
            </summary>
            <param name="info">分页实体信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetAllToDataTable(System.Data.Common.DbTransaction)">
            <summary>
            返回所有记录到DataTable集合中
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetAllToDataTable(System.String,System.Data.Common.DbTransaction)">
            <summary>
            返回所有记录到DataTable集合中
            </summary>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetAllToDataTable(WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            根据分页条件，返回DataTable对象
            </summary>
            <param name="info">分页条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetAllToDataTable(WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据分页条件，返回DataTable对象
            </summary>
            <param name="info">分页条件</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.FindToDataTable(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据查询条件，返回记录到DataTable集合中
            </summary>
            <param name="condition">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.FindToDataTable(System.String,WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            根据查询条件，返回记录到DataTable集合中
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.FindToDataTable(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回DataTable集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定DataTable的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetFieldList(System.String,System.Data.Common.DbTransaction)">
            <summary>
            获取某字段数据字典列表
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetFieldListByCondition(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件，获取某字段数据字典列表
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="condition">查询的条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.FindByView(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.FindByView(System.String,System.String,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="sortField">排序字段</param>
            <param name="isDescending">是否为降序</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetTopResult(System.String,System.Int32,System.String,System.Data.Common.DbTransaction)">
            <summary>
            获取前面记录指定数量的记录
            </summary>
            <param name="sql">查询语句</param>
            <param name="count">指定数量</param>
            <param name="orderBy">排序条件，例如order by id</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.FindByViewWithPager(System.String,System.String,System.String,System.Boolean,WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="sortField">排序字段</param>
            <param name="isDescending">是否为降序</param>
            <param name="info">分页条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.SetDbConfigName(System.String)">
            <summary>
            设置数据库配置项名称
            </summary>
            <param name="dbConfigName">数据库配置项名称</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.InitTableName(System.String)">
            <summary>
            初始化数据库表名
            </summary>
            <param name="tableName">数据库表名</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetTableNames">
            <summary>
            获取数据库的全部表名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetFieldTypeList">
            <summary>
            获取表的字段名称和数据类型列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetColumnNameAlias">
            <summary>
            获取字段中文别名（用于界面显示）的字典集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.IBaseDAL`1.GetReportData(System.String,System.String)">
            <summary>
            获取指定字段的报表数据
            </summary>
            <param name="fieldName">表字段</param>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="E:WHC.Framework.ControlUtil.IBaseDAL`1.OnOperationLog">
            <summary>
            定义一个操作记录的事件处理
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQLite`1.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQLite`1.#ctor(System.String,System.String)">
            <summary>
            指定表名以及主键,对基类进构造
            </summary>
            <param name="tableName">表名</param>
            <param name="primaryKey">表主键</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQLite`1.Insert2(System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            添加记录
            </summary>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQLite`1.TestConnection(System.String)">
            <summary>
            测试数据库是否正常连接
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQLite`1.FindFirst(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最旧的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQLite`1.FindLast(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最新的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQLite`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQLite`1.FindToDataTable(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回DataTable集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定DataTable的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQLite`1.GetTopResult(System.String,System.Int32,System.String,System.Data.Common.DbTransaction)">
            <summary>
            获取前面记录指定数量的记录
            </summary>
            <param name="sql">查询语句</param>
            <param name="count">指定数量</param>
            <param name="orderBy">排序条件，例如order by id</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQLite`1.SqlTable(System.String,System.Data.Common.DbTransaction)">
            <summary>
            兼容Oracle的字段大写的重写函数
            </summary>
            <param name="sql">sql语句</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQLite`1.SqlTable(System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            兼容Oracle的字段大写的重写函数
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">SQL参数集合</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQLite`1.GetTableNames">
            <summary>
            获取数据库的全部表名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQLite`1.CreateDatabase">
            <summary>
            根据配置数据库配置名称生成Database对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQLite`1.GetConnectionString(System.String)">
            <summary>
            动态改变或者连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:WHC.Framework.ControlUtil.BaseDALSQL`1">
            <summary>
            数据访问层的基类
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQL`1.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQL`1.#ctor(System.String,System.String)">
            <summary>
            指定表名以及主键,对基类进构造
            </summary>
            <param name="tableName">表名</param>
            <param name="primaryKey">表主键</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQL`1.Insert2(System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            添加记录
            </summary>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQL`1.TestConnection(System.String)">
            <summary>
            测试数据库是否正常连接
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQL`1.FindFirst(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最旧的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQL`1.FindLast(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最新的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQL`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQL`1.FindToDataTable(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回DataTable集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定DataTable的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQL`1.GetTopResult(System.String,System.Int32,System.String,System.Data.Common.DbTransaction)">
            <summary>
            获取前面记录指定数量的记录
            </summary>
            <param name="sql">查询语句</param>
            <param name="count">指定数量</param>
            <param name="orderBy">排序条件，例如order by id</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQL`1.SqlTable(System.String,System.Data.Common.DbTransaction)">
            <summary>
            兼容Oracle的字段大写的重写函数
            </summary>
            <param name="sql">sql语句</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQL`1.SqlTable(System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            兼容Oracle的字段大写的重写函数
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">SQL参数集合</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALSQL`1.GetTableNames">
            <summary>
            获取数据库的全部表名称
            </summary>
            <returns></returns>
        </member>
        <member name="T:WHC.Framework.ControlUtil.BaseDALOracle`1">
            <summary>
            数据访问层的基类
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALOracle`1.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALOracle`1.#ctor(System.String,System.String)">
            <summary>
            指定表名以及主键,对基类进构造
            </summary>
            <param name="tableName">表名</param>
            <param name="primaryKey">表主键</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALOracle`1.Insert(System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            添加记录
            </summary>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALOracle`1.Insert2(System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            添加记录
            </summary>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALOracle`1.AddInClobParameter(System.Data.Common.DbCommand,System.String,System.String)">
            <summary>
            为指定查询对象增加一个clob类型参数并赋值
            </summary>
            <param name="command">查询对象</param>
            <param name="paranme">参数名</param>
            <param name="data">参数值</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALOracle`1.TestConnection(System.String)">
            <summary>
            测试数据库是否正常连接
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALOracle`1.FindFirst(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最旧的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALOracle`1.FindLast(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最新的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALOracle`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALOracle`1.FindToDataTable(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回DataTable集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定DataTable的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALOracle`1.GetTopResult(System.String,System.Int32,System.String,System.Data.Common.DbTransaction)">
            <summary>
            获取前面记录指定数量的记录
            </summary>
            <param name="sql">查询语句</param>
            <param name="count">指定数量</param>
            <param name="orderBy">排序条件，例如order by id</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALOracle`1.GetTableNames">
            <summary>
            获取数据库的全部表名称
            </summary>
            <returns></returns>
        </member>
        <member name="P:WHC.Framework.ControlUtil.BaseDALOracle`1.SeqField">
            <summary>
            指定那个字段是用序列来控制它的值的，一般为主键
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.BaseDALOracle`1.SeqName">
            <summary>
            指定的序列名称，建议规则为：SEQ_表名称
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.BaseDALMySql`1">
            <summary>
            MySql数据访问层的基类
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALMySql`1.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALMySql`1.#ctor(System.String,System.String)">
            <summary>
            指定表名以及主键,对基类进构造
            </summary>
            <param name="tableName">表名</param>
            <param name="primaryKey">表主键</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALMySql`1.Insert2(System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            添加记录
            </summary>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALMySql`1.TestConnection(System.String)">
            <summary>
            测试数据库是否正常连接
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALMySql`1.FindFirst(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最旧的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALMySql`1.FindLast(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最新的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALMySql`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALMySql`1.FindToDataTable(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回DataTable集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定DataTable的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALMySql`1.GetTopResult(System.String,System.Int32,System.String,System.Data.Common.DbTransaction)">
            <summary>
            获取前面记录指定数量的记录
            </summary>
            <param name="sql">查询语句</param>
            <param name="count">指定数量</param>
            <param name="orderBy">排序条件，例如order by id</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALMySql`1.SqlTable(System.String,System.Data.Common.DbTransaction)">
            <summary>
            兼容Oracle的字段大写的重写函数
            </summary>
            <param name="sql">sql语句</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALMySql`1.SqlTable(System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            兼容Oracle的字段大写的重写函数
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">SQL参数集合</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALMySql`1.GetTableNames">
            <summary>
            获取数据库的全部表名称
            </summary>
            <returns></returns>
        </member>
        <member name="T:WHC.Framework.ControlUtil.BaseDALAccess`1">
            <summary>
            数据访问层的基类
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALAccess`1.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALAccess`1.#ctor(System.String,System.String)">
            <summary>
            指定表名以及主键,对基类进构造
            </summary>
            <param name="tableName">表名</param>
            <param name="primaryKey">表主键</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALAccess`1.Insert(System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            添加记录
            </summary>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALAccess`1.Insert2(System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            添加记录
            </summary>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALAccess`1.PrivateUpdate(System.Object,System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            更新某个表一条记录
            </summary>
            <param name="id">ID值</param>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALAccess`1.PrivateUpdate2(System.Object,System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            更新某个表一条记录
            </summary>
            <param name="id">ID值</param>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALAccess`1.TestConnection(System.String)">
            <summary>
            测试数据库是否正常连接
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALAccess`1.FindFirst(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最旧的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALAccess`1.FindLast(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最新的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALAccess`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALAccess`1.FindToDataTable(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回DataTable集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定DataTable的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALAccess`1.GetTopResult(System.String,System.Int32,System.String,System.Data.Common.DbTransaction)">
            <summary>
            获取前面记录指定数量的记录
            </summary>
            <param name="sql">查询语句</param>
            <param name="count">指定数量</param>
            <param name="orderBy">排序条件，例如order by id</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALAccess`1.SqlTable(System.String,System.Data.Common.DbTransaction)">
            <summary>
            兼容Oracle的字段大写的重写函数
            </summary>
            <param name="sql">sql语句</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALAccess`1.SqlTable(System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            兼容Oracle的字段大写的重写函数
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">SQL参数集合</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALAccess`1.GetTableNames">
            <summary>
            获取数据库的全部表名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALAccess`1.CreateDatabase">
            <summary>
            根据配置数据库配置名称生成Database对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALAccess`1.GetConnectionString(System.String)">
            <summary>
            动态改变或者连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:WHC.Framework.ControlUtil.BaseDALDm`1">
            <summary>
            数据访问层的基类
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALDm`1.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALDm`1.#ctor(System.String,System.String,System.String)">
            <summary>
            指定表名以及主键,对基类进构造
            </summary>
            <param name="tableName">表名</param>
            <param name="primaryKey">表主键</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALDm`1.Insert2(System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            添加记录
            </summary>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALDm`1.TestConnection(System.String)">
            <summary>
            测试数据库是否正常连接
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALDm`1.FindFirst(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最旧的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALDm`1.FindLast(System.Data.Common.DbTransaction)">
            <summary>
            查找记录表中最新的一条记录
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALDm`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALDm`1.FindToDataTable(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回DataTable集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定DataTable的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALDm`1.GetTopResult(System.String,System.Int32,System.String,System.Data.Common.DbTransaction)">
            <summary>
            获取前面记录指定数量的记录
            </summary>
            <param name="sql">查询语句</param>
            <param name="count">指定数量</param>
            <param name="orderBy">排序条件，例如order by id</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.BaseDALDm`1.GetTableNames">
            <summary>
            获取数据库的全部表名称
            </summary>
            <returns></returns>
        </member>
        <member name="P:WHC.Framework.ControlUtil.BaseDALDm`1.Schema">
            <summary>
            数据库的模式名称
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.BaseEntity">
            <summary>
            框架实体类的基类
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.BaseEntity.CurrentLoginUserId">
            <summary>
            当前登录用户ID。该字段不保存到数据表中，只用于记录用户的操作日志。
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.BaseEntity.Data1">
            <summary>
            用来给实体类传递一些额外的数据，如外键的转义等，该字段不保存到数据表中
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.BaseEntity.Data2">
            <summary>
            用来给实体类传递一些额外的数据，如外键的转义等，该字段不保存到数据表中
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.BaseEntity.Data3">
            <summary>
            用来给实体类传递一些额外的数据，如外键的转义等，该字段不保存到数据表中
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.BLLFactory`1">
            <summary>
            对业务类进行构造的工厂类
            </summary>
            <typeparam name="T">业务对象类型</typeparam>
        </member>
        <member name="P:WHC.Framework.ControlUtil.BLLFactory`1.Instance">
            <summary>
            创建或者从缓存中获取对应业务类的实例
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.CommonDAL">
            <summary>
            数据访问层的通用辅助类库，支持多种数据库的操作处理，包括Oracle、SqlServer、Sqlite、MySql、Access等。
            使用该类，可以直接操作各种不同的数据库，不需要进行继承而直接使用。
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.#ctor(System.String)">
            <summary>
            指定表名以及主键,对基类进构造
            </summary>
            <param name="tableName">表名</param>
            <param name="primaryKey">表主键</param>
            <param name="dbType">数据库类型，如果为空从配置文件里面获取ComponentDbType的键值</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.#ctor(System.String,System.String,System.String)">
            <summary>
            指定表名以及主键,对基类进构造
            </summary>
            <param name="tableName">表名</param>
            <param name="primaryKey">表主键</param>
            <param name="dbType">数据库类型，如果为空从配置文件里面获取ComponentDbType的键值</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.InitDbParameter(System.String,System.String,System.String@)">
            <summary>
            指定表名以及主键,对类库进行初始化，如使用参数化构造函数，不需此操作
            </summary>
            <param name="tableName">表名</param>
            <param name="primaryKey">表主键</param>
            <param name="dbType">数据库类型</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.SetDbConfigName(System.String)">
            <summary>
            设置数据库配置项名称
            </summary>
            <param name="dbConfigName">数据库配置项名称</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.CreateDatabase">
            <summary>
            根据配置数据库配置名称生成Database对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetSubValue(System.String,System.String)">
            <summary>
            获取指定字符串中的子项的值
            </summary>
            <param name="connectionString">字符串值</param>
            <param name="subKeyName">以分号(;)为分隔符的子项名称</param>
            <returns>对应子项名称的值（即是=号后面的值）</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetSafeFileName(System.String)">
            <summary>
            生成防止和保留字、关键字同名的字段格式，如[value]。
            </summary>
            <param name="fieldName">字段名，如value</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.Insert(System.Collections.Hashtable,System.Data.Common.DbTransaction)">
            <summary>
            添加记录
            </summary>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.Insert(System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            添加记录
            </summary>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.Insert2(System.Collections.Hashtable,System.Data.Common.DbTransaction)">
            <summary>
            添加记录
            </summary>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.Insert2(System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            添加记录
            </summary>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.Update(System.Object,System.Collections.Hashtable,System.Data.Common.DbTransaction)">
            <summary>
            更新某个表一条记录(只适用于用单键,用int类型作键值的表)
            </summary>
            <param name="id">ID值</param>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.Update(System.Object,System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            更新某个表一条记录(只适用于用单键,用int类型作键值的表)
            </summary>
            <param name="id">ID值</param>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.PrivateUpdate(System.Object,System.Collections.Hashtable,System.String,System.Data.Common.DbTransaction)">
            <summary>
            更新某个表一条记录
            </summary>
            <param name="id">ID值</param>
            <param name="recordField">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="targetTable">需要操作的目标表名称</param>
            <param name="trans">事务对象,如果使用事务,传入事务对象,否则为Null不使用事务</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.SqlValueList(System.String,System.Data.Common.DbTransaction)">
            <summary>
            执行SQL查询语句，返回查询结果的所有记录的第一个字段,用逗号分隔。
            </summary>
            <param name="sql">SQL语句</param>
            <param name="trans">事务对象</param>
            <returns>
            返回查询结果的所有记录的第一个字段,用逗号分隔。
            </returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.SqlExecute(System.String,System.Data.Common.DbTransaction)">
            <summary>
            执行一些特殊的语句
            </summary>
            <param name="sql">SQL语句</param>
            <param name="trans">事务对象</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.StoreProcExecute(System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            执行存储过程函数。
            </summary>
            <param name="storeProcName">存储过程函数</param>
            <param name="parameters">参数集合</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.SqlTable(System.String,System.Data.Common.DbTransaction)">
            <summary>
            执行SQL查询语句，返回所有记录的DataTable集合。
            </summary>
            <param name="sql">SQL查询语句</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.SqlTable(System.String,System.Data.Common.DbParameter[],System.Data.Common.DbTransaction)">
            <summary>
            执行SQL查询语句，返回所有记录的DataTable集合。
            </summary>
            <param name="sql">SQL查询语句</param>
            <param name="parameters">参数集合</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.CreateTransaction">
            <summary>
            打开数据库连接，并创建事务对象
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.CreateTransaction(System.Data.IsolationLevel)">
            <summary>
            打开数据库连接，并创建事务对象
            </summary>
            <param name="level">事务级别</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.TestConnection(System.String)">
            <summary>
            测试数据库是否正常连接
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.FindByID(System.Object,System.Data.Common.DbTransaction)">
            <summary>
            查询数据库,检查是否存在指定ID的对象
            </summary>
            <param name="key">对象的ID值</param>
            <param name="trans">事务对象</param>
            <returns>存在则返回指定的对象,否则返回Null</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.PrivateFindByID(System.Object,System.Data.Common.DbTransaction)">
            <summary>
            提供对FindByID的私有方法实现
            </summary>
            <param name="key">主键的值</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.FindByIDs(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据ID字符串(逗号分隔)获取对象列表
            </summary>
            <param name="idString">ID字符串(逗号分隔)</param>
            <param name="trans">事务对象</param>
            <returns>符合条件的对象列表</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetAllToDataTable(System.Data.Common.DbTransaction)">
            <summary>
            返回所有记录到DataTable集合中
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetAllToDataTable(System.String,System.Data.Common.DbTransaction)">
            <summary>
            返回所有记录到DataTable集合中
            </summary>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetAllToDataTable(WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            根据分页条件，返回DataTable对象
            </summary>
            <param name="info">分页条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetAllToDataTable(WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据分页条件，返回DataTable对象
            </summary>
            <param name="info">分页条件</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.FindToDataTable(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据查询条件，返回记录到DataTable集合中
            </summary>
            <param name="condition">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.FindToDataTable(System.String,WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            根据查询条件，返回记录到DataTable集合中
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.FindToDataTable(System.String,WHC.Pager.Entity.PagerInfo,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件查询数据库,并返回DataTable集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <param name="trans">事务对象</param>
            <returns>指定DataTable的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetDataTableBySql(System.String,System.Data.Common.DbTransaction)">
            <summary>
            操根据条件返回DataTable记录辅助类
            </summary>
            <param name="sql"></param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetFieldList(System.String,System.Data.Common.DbTransaction)">
            <summary>
            获取某字段数据字典列表
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetFieldListByCondition(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件，获取某字段数据字典列表
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.FindByView(System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.FindByView(System.String,System.String,System.String,System.Boolean,System.Data.Common.DbTransaction)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="sortField">排序字段</param>
            <param name="isDescending">是否为降序</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.FindByViewWithPager(System.String,System.String,System.String,System.Boolean,WHC.Pager.Entity.PagerInfo,System.Data.Common.DbTransaction)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="sortField">排序字段</param>
            <param name="isDescending">是否为降序</param>
            <param name="info">分页条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetRecordCount(System.Data.Common.DbTransaction)">
            <summary>
            获取表的所有记录数量
            </summary>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetRecordCount(System.String,System.Data.Common.DbTransaction)">
            <summary>
            获取表的所有记录数量
            </summary>
            <param name="condition">查询条件</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetExecuteScalarValue(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            获取单一的记录值
            </summary>
            <param name="db">Database对象</param>
            <param name="command">DbCommand对象</param>
            <param name="trans">DbTransaction对象，可为空</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.IsExistRecord(System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据condition条件，判断是否存在记录
            </summary>
            <param name="condition">查询的条件</param>
            <param name="trans">事务对象</param>
            <returns>如果存在返回True，否则False</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.IsExistKey(System.Collections.Hashtable,System.Data.Common.DbTransaction)">
            <summary>
            查询数据库,检查是否存在指定键值的对象
            </summary>
            <param name="recordTable">Hashtable:键[key]为字段名;值[value]为字段对应的值</param>
            <param name="trans">事务对象</param>
            <returns>存在则返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.IsExistKey(System.String,System.Object,System.Data.Common.DbTransaction)">
            <summary>
            查询数据库,检查是否存在指定键值的对象
            </summary>
            <param name="fieldName">指定的属性名</param>
            <param name="key">指定的值</param>
            <param name="trans">事务对象</param>
            <returns>存在则返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetMaxID(System.Data.Common.DbTransaction)">
            <summary>
            获取数据库中该对象的最大ID值
            </summary>
            <param name="trans">事务对象</param>
            <returns>最大ID值</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetFieldValue(System.Object,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据主键和字段名称，获取对应字段的内容
            </summary>
            <param name="key">指定对象的ID</param>
            <param name="fieldName">字段名称</param>
            <param name="trans">事务对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.Delete(System.Object,System.Data.Common.DbTransaction)">
            <summary>
            根据指定对象的ID,从数据库中删除指定对象
            </summary>
            <param name="key">指定对象的ID</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.DeleteByUser(System.Object,System.String,System.Data.Common.DbTransaction)">
            <summary>
            根据指定对象的ID和用户ID,从数据库中删除指定对象(用于记录人员的操作日志）
            </summary>
            <param name="key">指定对象的ID</param>
            <param name="userId">用户ID</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.DeleteByCondition(System.String,System.Data.Common.DbTransaction,System.Data.IDbDataParameter[])">
            <summary>
            根据指定条件,从数据库中删除指定对象
            </summary>
            <param name="condition">删除记录的条件语句</param>
            <param name="trans">事务对象</param>
            <param name="paramList">Sql参数列表</param>
            <param name="trans">事务对象</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.TypeToDbType(System.Type)">
            <summary>
            转换.NET的对象类型到数据库类型
            </summary>
            <param name="t">.NET的对象类型</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.InitTableName(System.String)">
            <summary>
            初始化数据库表名
            </summary>
            <param name="tableName">数据库表名</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.HasInjectionData(System.String)">
            <summary>
            验证是否存在注入代码(条件语句）
            </summary>
            <param name="inputData"></param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetRegexString">
            <summary>
            获取正则表达式
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetTableNames">
            <summary>
            获取数据库的全部表名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetFieldTypeList">
            <summary>
            获取表的字段名称和数据类型列表。
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetReaderSchema(System.String)">
            <summary>
            获取指定表的元数据，包括字段名称、类型等等
            </summary>
            <param name="tableName">数据库表名</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetColumnNameAlias">
            <summary>
            获取字段中文别名（用于界面显示）的字典集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.GetReportData(System.String,System.String)">
            <summary>
            获取指定字段的报表数据
            </summary>
            <param name="fieldName">表字段</param>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.StorePorcExecute(System.String,System.Collections.Hashtable,System.Collections.Hashtable,System.Data.Common.DbTransaction)">
            <summary>
            执行存储过程，如果影响记录数，返回True，否则为False，修改并输出外部参数outParameters（如果有）。
            </summary>
            <param name="storeProcName">存储过程名称</param>
            <param name="inParameters">输入参数，可为空</param>
            <param name="outParameters">输出参数，可为空</param>
            <param name="trans">事务对象，可为空</param>
            <returns>如果影响记录数，返回True，否则为False</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.StorePorcToDataTable(System.String,System.Collections.Hashtable,System.Collections.Hashtable,System.Data.Common.DbTransaction)">
            <summary>
            执行存储过程，返回DataTable集合，修改并输出外部参数outParameters（如果有）。
            </summary>
            <param name="storeProcName">存储过程名称</param>
            <param name="inParameters">输入参数，可为空</param>
            <param name="outParameters">输出参数，可为空</param>
            <param name="trans">事务对象，可为空</param>
            <returns>返回DataTable集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.SetStoreParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            传入输入参数和输出参数到Database和DbCommand对象。
            </summary>
            <param name="db">Database对象</param>
            <param name="command">DbCommand对象</param>
            <param name="inParameters">输入参数的哈希表</param>
            <param name="outParameters">输出参数的哈希表</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.CommonDAL.EditOutParameters(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand,System.Collections.Hashtable)">
            <summary>
            执行存储过程后，获取需要输出的参数值，修改存储在哈希表里
            </summary>
            <param name="db">Database对象</param>
            <param name="command">DbCommand对象</param>
            <param name="outParameters">输出参数的哈希表</param>
        </member>
        <member name="P:WHC.Framework.ControlUtil.CommonDAL.DbConfigName">
            <summary>
            数据库配置名称，默认为空。
            可在子类指定不同的配置名称，用于访问不同的数据库
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.CommonDAL.ParameterPrefix">
            <summary>
            数据库参数化访问的占位符
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.CommonDAL.SafeFieldFormat">
            <summary>
            防止和保留字、关键字同名的字段格式，如[value]。
            不同数据库类型的BaseDAL需要进行修改
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.CommonDAL.SortField">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.CommonDAL.IsDescending">
            <summary>
            是否为降序
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.CommonDAL.SelectedFields">
            <summary>
            选择的字段，默认为所有(*)
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.CommonDAL.TableName">
            <summary>
            数据库访问对象的表名
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.CommonDAL.PrimaryKey">
            <summary>
            数据库访问对象的外键约束
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.Facade.BaseLocalService`1">
            <summary>
            基于Winform的基础API包装类
            </summary>
            <typeparam name="T">Facade接口</typeparam>
        </member>
        <member name="T:WHC.Framework.ControlUtil.Facade.IBaseService`1">
            <summary>
            基于Facade业务模式定义的接口，可以使用WCF、传统本地访问等模式进行获取数据的公共接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.Insert(`0)">
            <summary>
            插入指定对象到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <returns>执行操作是否成功。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.Insert2(`0)">
            <summary>
            插入指定对象到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <returns>执行成功返回新增记录的自增长ID。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.InsertUpdate(`0,System.Object)">
            <summary>
            插入或更新对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.InsertIfNew(`0,System.Object)">
            <summary>
            如果不存在记录，则插入对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <returns>执行插入成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.Update(`0,System.Object)">
            <summary>
            更新对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.SqlValueList(System.String)">
            <summary>
            执行SQL查询语句，返回查询结果的所有记录的第一个字段,用逗号分隔。
            </summary>
            <param name="sql">SQL语句</param>
            <returns>
            返回查询结果的所有记录的第一个字段,用逗号分隔。
            </returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.SqlTable(System.String)">
            <summary>
            执行SQL查询语句，返回所有记录的DataTable集合。
            </summary>
            <param name="sql">SQL查询语句</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.FindByID(System.String)">
            <summary>
            查询数据库,检查是否存在指定ID的对象(用于字符型主键)
            </summary>
            <param name="key">对象的ID值</param>
            <returns>存在则返回指定的对象,否则返回Null</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.FindByID2(System.Int32)">
            <summary>
            查询数据库,检查是否存在指定ID的对象(用于整型主键)
            </summary>
            <param name="key">对象的ID值</param>
            <returns>存在则返回指定的对象,否则返回Null</returns>[OperationContract]
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.FindSingle(System.String)">
            <summary>
            根据条件查询数据库,如果存在返回第一个对象
            </summary>
            <param name="condition">查询的条件</param>
            <returns>指定的对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.FindSingle2(System.String,System.String)">
            <summary>
            根据条件查询数据库,如果存在返回第一个对象
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">排序条件</param>
            <returns>指定的对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.FindFirst">
            <summary>
            查找记录表中最旧的一条记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.FindLast">
            <summary>
            查找记录表中最新的一条记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.FindByIDs(System.String)">
            <summary>
            根据ID字符串(逗号分隔)获取对象列表
            </summary>
            <param name="idString">ID字符串(逗号分隔)</param>
            <returns>符合条件的对象列表</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.Find(System.String)">
            <summary>
            根据条件查询数据库,并返回对象集合
            </summary>
            <param name="condition">查询的条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.Find2(System.String,System.String)">
            <summary>
            根据条件查询数据库,并返回对象集合
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">排序条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo@)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.FindWithPager2(System.String,WHC.Pager.Entity.PagerInfo@,System.String)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.FindWithPager3(System.String,WHC.Pager.Entity.PagerInfo@,System.String,System.Boolean)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.GetAll">
            <summary>
            返回数据库所有的对象集合
            </summary>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.GetAll2(System.String)">
            <summary>
            返回数据库所有的对象集合
            </summary>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.GetAllWithPager(WHC.Pager.Entity.PagerInfo@)">
            <summary>
            返回数据库所有的对象集合(用于分页数据显示)
            </summary>
            <param name="info">分页实体信息</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.GetAllWithPager2(WHC.Pager.Entity.PagerInfo@,System.String,System.Boolean)">
            <summary>
            返回数据库所有的对象集合(用于分页数据显示)
            </summary>
            <param name="info">分页实体信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.GetAllToDataTable">
            <summary>
            返回所有记录到DataTable集合中
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.GetAllToDataTable2(System.String)">
            <summary>
            返回所有记录到DataTable集合中
            </summary>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.GetAllToDataTableWithPager(WHC.Pager.Entity.PagerInfo@)">
            <summary>
            根据分页条件，返回DataSet对象
            </summary>
            <param name="info">分页条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.GetAllToDataTableWithPager2(WHC.Pager.Entity.PagerInfo@,System.String,System.Boolean)">
            <summary>
            根据分页条件，返回DataSet对象
            </summary>
            <param name="info">分页条件</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.FindToDataTable(System.String)">
            <summary>
            根据查询条件，返回记录到DataTable集合中
            </summary>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.FindToDataTableWithPager(System.String,WHC.Pager.Entity.PagerInfo@)">
            <summary>
            根据查询条件，返回记录到DataTable集合中
            </summary>
            <param name="condition">查询条件</param>
            <param name="pagerInfo">分页条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.FindToDataTableWithPager2(System.String,WHC.Pager.Entity.PagerInfo@,System.String,System.Boolean)">
            <summary>
            根据条件查询数据库,并返回DataTable集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <returns>指定DataTable的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.FindByView(System.String,System.String)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.FindByView2(System.String,System.String,System.String,System.Boolean)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="sortField">排序字段</param>
            <param name="isDescending">是否为降序</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.FindByViewWithPager(System.String,System.String,System.String,System.Boolean,WHC.Pager.Entity.PagerInfo)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="sortField">排序字段</param>
            <param name="isDescending">是否为降序</param>
            <param name="info">分页条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.GetRecordCount">
            <summary>
            获取表的所有记录数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.GetRecordCount2(System.String)">
            <summary>
            获取表的所有记录数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.IsExistRecord(System.String)">
            <summary>
            根据condition条件，判断是否存在记录
            </summary>
            <param name="condition">查询的条件</param>
            <returns>如果存在返回True，否则False</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.IsExistKey(System.String,System.Object)">
            <summary>
            查询数据库,检查是否存在指定键值的对象
            </summary>
            <param name="fieldName">指定的属性名</param>
            <param name="key">指定的值</param>
            <returns>存在则返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.Delete(System.String)">
            <summary>
            根据指定对象的ID,从数据库中删除指定对象(用于字符主键)
            </summary>
            <param name="key">指定对象的ID</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.Delete2(System.Int32)">
            <summary>
            根据指定对象的ID,从数据库中删除指定对象(用于整型主键)
            </summary>
            <param name="key">指定对象的ID</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.DeleteByCondition(System.String)">
            <summary>
            根据指定对象的ID,从数据库中删除指定对象(用于字符主键)
            </summary>
            <param name="condition">指定的删除条件</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.GetFieldList(System.String)">
            <summary>
            获取字段列表
            </summary>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.GetFieldListByCondition(System.String,System.String)">
            <summary>
            根据条件，获取某字段数据字典列表
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="condition">查询的条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.GetFieldTypeList">
            <summary>
            获取表的字段名称和数据类型列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.GetColumnNameAlias">
            <summary>
            获取字段中文别名（用于界面显示）的字典集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.IBaseService`1.GetReportData(System.String,System.String)">
            <summary>
            获取指定字段的报表数据
            </summary>
            <param name="fieldName">表字段</param>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="F:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.baseBLL">
            <summary>
            基础业务对象
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.#ctor(WHC.Framework.ControlUtil.BaseBLL{`0})">
            <summary>
            使用业务对象构造对象
            </summary>
            <param name="bll"></param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.Insert(`0)">
            <summary>
            插入指定对象到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <returns>执行成功返回新增记录的自增长ID。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.Insert2(`0)">
            <summary>
            插入指定对象到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <returns>执行成功返回新增记录的自增长ID。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.InsertUpdate(`0,System.Object)">
            <summary>
            插入或更新对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.InsertIfNew(`0,System.Object)">
            <summary>
            如果不存在记录，则插入对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <returns>执行插入成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.Update(`0,System.Object)">
            <summary>
            更新对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.SqlValueList(System.String)">
            <summary>
            执行SQL查询语句，返回查询结果的所有记录的第一个字段,用逗号分隔。
            </summary>
            <param name="sql">SQL语句</param>
            <returns>
            返回查询结果的所有记录的第一个字段,用逗号分隔。
            </returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.SqlTable(System.String)">
            <summary>
            执行SQL查询语句，返回所有记录的DataTable集合。
            </summary>
            <param name="sql">SQL查询语句</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.FindByID(System.String)">
            <summary>
            查询数据库,检查是否存在指定ID的对象(用于字符型主键)
            </summary>
            <param name="key">对象的ID值</param>
            <returns>存在则返回指定的对象,否则返回Null</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.FindByID2(System.Int32)">
            <summary>
            查询数据库,检查是否存在指定ID的对象(用于整型主键)
            </summary>
            <param name="key">对象的ID值</param>
            <returns>存在则返回指定的对象,否则返回Null</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.FindSingle(System.String)">
            <summary>
            根据条件查询数据库,如果存在返回第一个对象
            </summary>
            <param name="condition">查询的条件</param>
            <returns>指定的对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.FindSingle2(System.String,System.String)">
            <summary>
            根据条件查询数据库,如果存在返回第一个对象
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">排序条件</param>
            <returns>指定的对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.FindFirst">
            <summary>
            查找记录表中最旧的一条记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.FindLast">
            <summary>
            查找记录表中最新的一条记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.FindByIDs(System.String)">
            <summary>
            根据ID字符串(逗号分隔)获取对象列表
            </summary>
            <param name="idString">ID字符串(逗号分隔)</param>
            <returns>符合条件的对象列表</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.Find(System.String)">
            <summary>
            根据条件查询数据库,并返回对象集合
            </summary>
            <param name="condition">查询的条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.Find2(System.String,System.String)">
            <summary>
            根据条件查询数据库,并返回对象集合
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">排序条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo@)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.FindWithPager2(System.String,WHC.Pager.Entity.PagerInfo@,System.String)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.FindWithPager3(System.String,WHC.Pager.Entity.PagerInfo@,System.String,System.Boolean)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.GetAll">
            <summary>
            返回数据库所有的对象集合
            </summary>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.GetAll2(System.String)">
            <summary>
            返回数据库所有的对象集合
            </summary>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.GetAllWithPager(WHC.Pager.Entity.PagerInfo@)">
            <summary>
            返回数据库所有的对象集合(用于分页数据显示)
            </summary>
            <param name="info">分页实体信息</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.GetAllWithPager2(WHC.Pager.Entity.PagerInfo@,System.String,System.Boolean)">
            <summary>
            返回数据库所有的对象集合(用于分页数据显示)
            </summary>
            <param name="info">分页实体信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.GetAllToDataTable">
            <summary>
            返回所有记录到DataTable集合中
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.GetAllToDataTable2(System.String)">
            <summary>
            返回所有记录到DataTable集合中
            </summary>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.GetAllToDataTableWithPager(WHC.Pager.Entity.PagerInfo@)">
            <summary>
            根据分页条件，返回DataSet对象
            </summary>
            <param name="info">分页条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.GetAllToDataTableWithPager2(WHC.Pager.Entity.PagerInfo@,System.String,System.Boolean)">
            <summary>
            根据分页条件，返回DataSet对象
            </summary>
            <param name="info">分页条件</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.FindToDataTable(System.String)">
            <summary>
            根据查询条件，返回记录到DataTable集合中
            </summary>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.FindToDataTableWithPager(System.String,WHC.Pager.Entity.PagerInfo@)">
            <summary>
            根据查询条件，返回记录到DataTable集合中
            </summary>
            <param name="condition">查询条件</param>
            <param name="pagerInfo">分页条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.FindToDataTableWithPager2(System.String,WHC.Pager.Entity.PagerInfo@,System.String,System.Boolean)">
            <summary>
            根据条件查询数据库,并返回DataTable集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <returns>指定DataTable的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.FindByView(System.String,System.String)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.FindByView2(System.String,System.String,System.String,System.Boolean)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="sortField">排序字段</param>
            <param name="isDescending">是否为降序</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.FindByViewWithPager(System.String,System.String,System.String,System.Boolean,WHC.Pager.Entity.PagerInfo)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="sortField">排序字段</param>
            <param name="isDescending">是否为降序</param>
            <param name="info">分页条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.GetRecordCount2(System.String)">
            <summary>
            获取表的所有记录数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.GetRecordCount">
            <summary>
            获取表的所有记录数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.IsExistKey(System.String,System.Object)">
            <summary>
            查询数据库,检查是否存在指定键值的对象
            </summary>
            <param name="fieldName">指定的属性名</param>
            <param name="key">指定的值</param>
            <returns>存在则返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.IsExistRecord(System.String)">
            <summary>
            根据condition条件，判断是否存在记录
            </summary>
            <param name="condition">查询的条件</param>
            <returns>如果存在返回True，否则False</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.Delete(System.String)">
            <summary>
            根据指定对象的ID,从数据库中删除指定对象(用于字符型主键)
            </summary>
            <param name="key">指定对象的ID</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.Delete2(System.Int32)">
            <summary>
            根据指定对象的ID,从数据库中删除指定对象(用于整型主键)
            </summary>
            <param name="key">指定对象的ID</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.DeleteByCondition(System.String)">
            <summary>
            根据指定条件,从数据库中删除指定对象
            </summary>
            <param name="condition">删除记录的条件语句</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.GetFieldList(System.String)">
            <summary>
            获取字段列表
            </summary>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.GetFieldListByCondition(System.String,System.String)">
            <summary>
            根据条件，获取某字段数据字典列表
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="condition">查询的条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.GetFieldTypeList">
            <summary>
            获取表的字段名称和数据类型列表。
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.GetColumnNameAlias">
            <summary>
            获取字段中文别名（用于界面显示）的字典集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseLocalService`1.GetReportData(System.String,System.String)">
            <summary>
            获取指定字段的报表数据
            </summary>
            <param name="fieldName">表字段</param>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:WHC.Framework.ControlUtil.Facade.BaseWCFService`1">
            <summary>
            基于WCF数据访问方式的基础API包装类
            </summary>
            <typeparam name="T">Facade接口</typeparam>
        </member>
        <member name="F:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.configurationPath">
            <summary>
            WCF配置文件, 默认为"WcfConfig.config"
            </summary>
        </member>
        <member name="F:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.endpointConfigurationName">
            <summary>
            服务配置节点,在子类中配置
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.#ctor(System.String,System.String)">
            <summary>
            使用自定义终结点配置
            </summary>
            <param name="endpointConfigurationName">终结点配置项名称</param>
            <param name="configurationPath">配置路径</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.CreateClient">
            <summary>
            子类构造一个ChannelFactory，方便给基类进行调用通用的API
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.Insert(`0)">
            <summary>
            插入指定对象到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <returns>执行成功返回新增记录的自增长ID。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.Insert2(`0)">
            <summary>
            插入指定对象到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <returns>执行成功返回新增记录的自增长ID。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.InsertUpdate(`0,System.Object)">
            <summary>
            插入或更新对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.InsertIfNew(`0,System.Object)">
            <summary>
            如果不存在记录，则插入对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <returns>执行插入成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.Update(`0,System.Object)">
            <summary>
            更新对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.SqlValueList(System.String)">
            <summary>
            执行SQL查询语句，返回查询结果的所有记录的第一个字段,用逗号分隔。
            </summary>
            <param name="sql">SQL语句</param>
            <returns>
            返回查询结果的所有记录的第一个字段,用逗号分隔。
            </returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.SqlTable(System.String)">
            <summary>
            执行SQL查询语句，返回所有记录的DataTable集合。
            </summary>
            <param name="sql">SQL查询语句</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.FindByID(System.String)">
            <summary>
            查询数据库,检查是否存在指定ID的对象(用于字符型主键)
            </summary>
            <param name="key">对象的ID值</param>
            <returns>存在则返回指定的对象,否则返回Null</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.FindByID2(System.Int32)">
            <summary>
            查询数据库,检查是否存在指定ID的对象(用于整型主键)
            </summary>
            <param name="key">对象的ID值</param>
            <returns>存在则返回指定的对象,否则返回Null</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.FindSingle(System.String)">
            <summary>
            根据条件查询数据库,如果存在返回第一个对象
            </summary>
            <param name="condition">查询的条件</param>
            <returns>指定的对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.FindSingle2(System.String,System.String)">
            <summary>
            根据条件查询数据库,如果存在返回第一个对象
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">排序条件</param>
            <returns>指定的对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.FindFirst">
            <summary>
            查找记录表中最旧的一条记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.FindLast">
            <summary>
            查找记录表中最新的一条记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.FindByIDs(System.String)">
            <summary>
            根据ID字符串(逗号分隔)获取对象列表
            </summary>
            <param name="idString">ID字符串(逗号分隔)</param>
            <returns>符合条件的对象列表</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.Find(System.String)">
            <summary>
            根据条件查询数据库,并返回对象集合
            </summary>
            <param name="condition">查询的条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.Find2(System.String,System.String)">
            <summary>
            根据条件查询数据库,并返回对象集合
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">排序条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo@)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.FindWithPager2(System.String,WHC.Pager.Entity.PagerInfo@,System.String)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.FindWithPager3(System.String,WHC.Pager.Entity.PagerInfo@,System.String,System.Boolean)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.GetAll">
            <summary>
            返回数据库所有的对象集合
            </summary>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.GetAll2(System.String)">
            <summary>
            返回数据库所有的对象集合
            </summary>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.GetAllWithPager(WHC.Pager.Entity.PagerInfo@)">
            <summary>
            返回数据库所有的对象集合(用于分页数据显示)
            </summary>
            <param name="info">分页实体信息</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.GetAllWithPager2(WHC.Pager.Entity.PagerInfo@,System.String,System.Boolean)">
            <summary>
            返回数据库所有的对象集合(用于分页数据显示)
            </summary>
            <param name="info">分页实体信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.GetAllToDataTable">
            <summary>
            返回所有记录到DataTable集合中
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.GetAllToDataTable2(System.String)">
            <summary>
            返回所有记录到DataTable集合中
            </summary>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.GetAllToDataTableWithPager(WHC.Pager.Entity.PagerInfo@)">
            <summary>
            根据分页条件，返回DataSet对象
            </summary>
            <param name="info">分页条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.GetAllToDataTableWithPager2(WHC.Pager.Entity.PagerInfo@,System.String,System.Boolean)">
            <summary>
            根据分页条件，返回DataSet对象
            </summary>
            <param name="info">分页条件</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.FindToDataTable(System.String)">
            <summary>
            根据查询条件，返回记录到DataTable集合中
            </summary>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.FindToDataTableWithPager(System.String,WHC.Pager.Entity.PagerInfo@)">
            <summary>
            根据查询条件，返回记录到DataTable集合中
            </summary>
            <param name="condition">查询条件</param>
            <param name="info">分页条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.FindToDataTableWithPager2(System.String,WHC.Pager.Entity.PagerInfo@,System.String,System.Boolean)">
            <summary>
            根据条件查询数据库,并返回DataTable集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="info">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <returns>指定DataTable的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.FindByView(System.String,System.String)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.FindByView2(System.String,System.String,System.String,System.Boolean)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="sortField">排序字段</param>
            <param name="isDescending">是否为降序</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.FindByViewWithPager(System.String,System.String,System.String,System.Boolean,WHC.Pager.Entity.PagerInfo)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="sortField">排序字段</param>
            <param name="isDescending">是否为降序</param>
            <param name="info">分页条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.GetRecordCount2(System.String)">
            <summary>
            获取表的所有记录数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.GetRecordCount">
            <summary>
            获取表的所有记录数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.IsExistKey(System.String,System.Object)">
            <summary>
            查询数据库,检查是否存在指定键值的对象
            </summary>
            <param name="fieldName">指定的属性名</param>
            <param name="key">指定的值</param>
            <returns>存在则返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.IsExistRecord(System.String)">
            <summary>
            根据condition条件，判断是否存在记录
            </summary>
            <param name="condition">查询的条件</param>
            <returns>如果存在返回True，否则False</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.Delete(System.String)">
            <summary>
            根据指定对象的ID,从数据库中删除指定对象(用于字符型主键)
            </summary>
            <param name="key">指定对象的ID</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.Delete2(System.Int32)">
            <summary>
            根据指定对象的ID,从数据库中删除指定对象(用于整型主键)
            </summary>
            <param name="key">指定对象的ID</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.DeleteByCondition(System.String)">
            <summary>
            根据指定条件,从数据库中删除指定对象
            </summary>
            <param name="condition">删除记录的条件语句</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.GetFieldList(System.String)">
            <summary>
            获取字段列表
            </summary>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.GetFieldListByCondition(System.String,System.String)">
            <summary>
            根据条件，获取某字段数据字典列表
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="condition">查询的条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.GetFieldTypeList">
            <summary>
            获取表的字段名称和数据类型列表。
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.GetColumnNameAlias">
            <summary>
            获取字段中文别名（用于界面显示）的字典集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseWCFService`1.GetReportData(System.String,System.String)">
            <summary>
            获取指定字段的报表数据
            </summary>
            <param name="fieldName">表字段</param>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="T:WHC.Framework.ControlUtil.Facade.CallerFactory`1">
            <summary>
            混合式框架中针对不同调用方式的工厂类（Web API、WCF或者Win方式调用）
            </summary>
            <typeparam name="T">接口类型</typeparam>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.CallerFactory`1.CreateObject">
            <summary>
            根据配置参数CallerType的值，创建不同的调用方式实现接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.CallerFactory`1.LoadAssembly">
            <summary>
            创建程序集对象
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.CallerFactory`1.Instance">
            <summary>
            创建或者从缓存中获取对应接口的实例
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.Facade.CustomClientChannel`1">
            <summary>
            自定义的客户端信道(允许从自定义的配置文件中加载)
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.CustomClientChannel`1.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="configurationPath">自定义配置文件路径</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.CustomClientChannel`1.#ctor(System.String,System.TimeSpan)">
            <summary>
            构造函数
            </summary>
            <param name="configurationPath">自定义配置文件路径</param>
            <param name="timeout">超时时间</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.CustomClientChannel`1.#ctor(System.ServiceModel.Channels.Binding,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="binding"></param>
            <param name="configurationPath">自定义配置文件路径</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.CustomClientChannel`1.#ctor(System.ServiceModel.Description.ServiceEndpoint,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="serviceEndpoint"></param>
            <param name="configurationPath">自定义配置文件路径</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.CustomClientChannel`1.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="endpointConfigurationName"></param>
            <param name="configurationPath">自定义配置文件路径</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.CustomClientChannel`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="binding"></param>
            <param name="endpointAddress"></param>
            <param name="configurationPath">自定义配置文件路径</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.CustomClientChannel`1.#ctor(System.ServiceModel.Channels.Binding,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="binding"></param>
            <param name="remoteAddress"></param>
            <param name="configurationPath">自定义配置文件路径</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.CustomClientChannel`1.#ctor(System.String,System.ServiceModel.EndpointAddress,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="endpointConfigurationName"></param>
            <param name="endpointAddress"></param>
            <param name="configurationPath">自定义配置文件路径</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.CustomClientChannel`1.CreateDescription">
            <summary>
            从指定的配置文件中加载服务终结点
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.CustomClientChannel`1.CreateBinding(System.String,System.ServiceModel.Configuration.ServiceModelSectionGroup)">
            <summary>
            为所选择的终结点配置绑定
            </summary>
            <param name="bindingName"></param>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.CustomClientChannel`1.GetBinding(System.ServiceModel.Configuration.IBindingConfigurationElement)">
            <summary>
            一些创建匹配绑定的方法
            </summary>
            <param name="configurationElement"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.CustomClientChannel`1.AddBehaviors(System.String,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceModelSectionGroup)">
            <summary>
            添加configured behavior 到所选择的终结点
            </summary>
            <param name="behaviorConfiguration"></param>
            <param name="serviceEndpoint"></param>
            <param name="group"></param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.CustomClientChannel`1.GetIdentity(System.ServiceModel.Configuration.IdentityElement)">
            <summary>
            从配置文件重获取终结点的identity 
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.CustomClientChannel`1.ApplyConfiguration(System.String)">
            <summary>
            应用配置内容
            </summary>
            <param name="configurationName">配置节点名称</param>
        </member>
        <member name="T:WHC.Framework.ControlUtil.Facade.BaseResultJson">
            <summary>
            接口返回数据结果基类
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseResultJson.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseResultJson.#ctor(System.String,System.Boolean,System.Int32)">
            <summary>
            普通参数构造
            </summary>
            <param name="errmsg">错误信息</param>
            <param name="success">是否成功</param>
            <param name="errcode">错误代码</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseResultJson.#ctor(System.Exception,System.Int32)">
            <summary>
            通过异常对象进行构造
            </summary>
            <param name="ex">异常对象</param>
            <param name="errcode">错误代码</param>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.BaseResultJson.errcode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.BaseResultJson.errmsg">
            <summary>
            如果不成功，返回的错误信息
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.BaseResultJson.success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.Facade.CheckResult">
            <summary>
            用户校验结果
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.CheckResult.userid">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.CheckResult.username">
            <summary>
            用户姓名
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.CheckResult.channel">
            <summary>
            用户登录来源渠道，0为网站，1为微信，2为安卓APP，3为苹果APP
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.CheckResult.corpid">
            <summary>
            所属公司ID（可选）
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.Facade.TokenResult">
            <summary>
            返回终端的Token信息
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.TokenResult.access_token">
            <summary>
            接口访问令牌
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.TokenResult.expires_in">
            <summary>
            令牌失效时间（秒）
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.Facade.SystemCommonError">
            <summary>
            接口访问常见错误
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.SystemCommonError.Message">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.SystemCommonError.MessageDetail">
            <summary>
            错误说明
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.Facade.PagedList`1">
            <summary>
            分页集合
            </summary>
            <typeparam name="T">对象</typeparam>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.PagedList`1.total_count">
            <summary>
            返回记录的总数
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.PagedList`1.list">
            <summary>
            列表集合
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.Facade.PageTableList">
            <summary>
            分页的表格
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.PageTableList.total_count">
            <summary>
            返回记录的总数
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.PageTableList.list">
            <summary>
            列表集合
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.ExtensionMethod.ToJson(System.Object)">
            <summary>
            把对象转换为字符串对象
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:WHC.Framework.ControlUtil.Facade.BaseApiService`1">
            <summary>
            基于Web API接口的基础API包装类
            </summary>
            <typeparam name="T">Facade接口</typeparam>
        </member>
        <member name="F:WHC.Framework.ControlUtil.Facade.BaseApiService`1.helper">
            <summary>
            访问网络的辅助类
            </summary>
        </member>
        <member name="F:WHC.Framework.ControlUtil.Facade.BaseApiService`1.config">
            <summary>
            访问配置文件的辅助类
            </summary>
        </member>
        <member name="F:WHC.Framework.ControlUtil.Facade.BaseApiService`1.configurationPath">
            <summary>
            WCF配置文件, 默认为"ApiConfig.config"
            </summary>
        </member>
        <member name="F:WHC.Framework.ControlUtil.Facade.BaseApiService`1.configurationName">
            <summary>
            API配置节点,在子类中配置
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.#ctor(System.String,System.String)">
            <summary>
            使用自定义配置
            </summary>
            <param name="configurationName">API配置项名称</param>
            <param name="configurationPath">配置路径</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetSignatureUrl(System.String,System.String,System.String)">
            <summary>
            根据当前时间和随机数，生成签名字符串的URL
            </summary>
            <param name="appId">应用ID</param>
            <param name="appSecret">渠道接入秘钥</param>
            <param name="token">访问令牌</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetSignatureUrl(System.String,System.String,System.String,System.String)">
            <summary>
            生成签名字符串的URL
            </summary>
            <param name="appId">应用ID</param>
            <param name="appSecret">渠道接入秘钥</param>
            <param name="timestamp">时间戳</param>
            <param name="nonce">随机数</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.SignatureString(System.String,System.String,System.String)">
            <summary>
            生成签名字符串
            </summary>
            <param name="appSecret">渠道接入秘钥</param>
            <param name="timestamp">时间戳</param>
            <param name="nonce">随机数</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.CombindUrl(System.String,System.String)">
            <summary>
            组合URL和Action的内容
            </summary>
            <param name="url">api的URL，如http://localhost/api/</param>
            <param name="action">操作动作，如insert</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetBaseUrl">
            <summary>
            获取API的配置路径并检查
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetNormalUrl(System.String)">
            <summary>
            获取处理的URL，并带上具体的处理方法
            </summary>
            <param name="action">控制器方法名称</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetPostUrl(System.String)">
            <summary>
            获取处理的URL,不带Token信息，但是包含签名信息
            </summary>
            <param name="action">控制器方法名称</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetPostUrlWithToken(System.String)">
            <summary>
            获取处理的URL,带Token和签名信息
            </summary>
            <param name="action">控制器方法名称</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetTokenUrl(System.String)">
            <summary>
            获取单纯包含token参数的连接
            </summary>
            <param name="action">控制器方法名称</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.Insert(`0)">
            <summary>
            插入指定对象到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <returns>执行成功返回新增记录的自增长ID。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.Insert2(`0)">
            <summary>
            插入指定对象到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <returns>执行成功返回新增记录的自增长ID。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.InsertUpdate(`0,System.Object)">
            <summary>
            插入或更新对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.InsertIfNew(`0,System.Object)">
            <summary>
            如果不存在记录，则插入对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <returns>执行插入成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.Update(`0,System.Object)">
            <summary>
            更新对象属性到数据库中
            </summary>
            <param name="obj">指定的对象</param>
            <param name="primaryKeyValue">主键的值</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.SqlValueList(System.String)">
            <summary>
            执行SQL查询语句，返回查询结果的所有记录的第一个字段,用逗号分隔。
            </summary>
            <param name="sql">SQL语句</param>
            <returns>
            返回查询结果的所有记录的第一个字段,用逗号分隔。
            </returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.SqlTable(System.String)">
            <summary>
            执行SQL查询语句，返回所有记录的DataTable集合。
            </summary>
            <param name="sql">SQL查询语句</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.FindByID(System.String)">
            <summary>
            查询数据库,检查是否存在指定ID的对象(用于字符型主键)
            </summary>
            <param name="key">对象的ID值</param>
            <returns>存在则返回指定的对象,否则返回Null</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.FindByID2(System.Int32)">
            <summary>
            查询数据库,检查是否存在指定ID的对象(用于整型主键)
            </summary>
            <param name="key">对象的ID值</param>
            <returns>存在则返回指定的对象,否则返回Null</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.FindSingle(System.String)">
            <summary>
            根据条件查询数据库,如果存在返回第一个对象
            </summary>
            <param name="condition">查询的条件</param>
            <returns>指定的对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.FindSingle2(System.String,System.String)">
            <summary>
            根据条件查询数据库,如果存在返回第一个对象
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">排序条件</param>
            <returns>指定的对象</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.FindFirst">
            <summary>
            查找记录表中最旧的一条记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.FindLast">
            <summary>
            查找记录表中最新的一条记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.FindByIDs(System.String)">
            <summary>
            根据ID字符串(逗号分隔)获取对象列表
            </summary>
            <param name="idString">ID字符串(逗号分隔)</param>
            <returns>符合条件的对象列表</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.Find(System.String)">
            <summary>
            根据条件查询数据库,并返回对象集合
            </summary>
            <param name="condition">查询的条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.Find2(System.String,System.String)">
            <summary>
            根据条件查询数据库,并返回对象集合
            </summary>
            <param name="condition">查询的条件</param>
            <param name="orderBy">排序条件</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.FindWithPager(System.String,WHC.Pager.Entity.PagerInfo@)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="pagerInfo">分页实体</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.FindWithPager2(System.String,WHC.Pager.Entity.PagerInfo@,System.String)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="pagerInfo">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.FindWithPager3(System.String,WHC.Pager.Entity.PagerInfo@,System.String,System.Boolean)">
            <summary>
            根据条件查询数据库,并返回对象集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="pagerInfo">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetAll">
            <summary>
            返回数据库所有的对象集合
            </summary>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetAll2(System.String)">
            <summary>
            返回数据库所有的对象集合
            </summary>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetAllWithPager(WHC.Pager.Entity.PagerInfo@)">
            <summary>
            返回数据库所有的对象集合(用于分页数据显示)
            </summary>
            <param name="pagerInfo">分页实体信息</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetAllWithPager2(WHC.Pager.Entity.PagerInfo@,System.String,System.Boolean)">
            <summary>
            返回数据库所有的对象集合(用于分页数据显示)
            </summary>
            <param name="pagerInfo">分页实体信息</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <returns>指定对象的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetAllToDataTable">
            <summary>
            返回所有记录到DataTable集合中
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetAllToDataTable2(System.String)">
            <summary>
            返回所有记录到DataTable集合中
            </summary>
            <param name="orderBy">自定义排序语句，如Order By Name Desc；如不指定，则使用默认排序</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetAllToDataTableWithPager(WHC.Pager.Entity.PagerInfo@)">
            <summary>
            根据分页条件，返回DataSet对象
            </summary>
            <param name="pagerInfo">分页条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetAllToDataTableWithPager2(WHC.Pager.Entity.PagerInfo@,System.String,System.Boolean)">
            <summary>
            根据分页条件，返回DataSet对象
            </summary>
            <param name="pagerInfo">分页条件</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.FindToDataTable(System.String)">
            <summary>
            根据查询条件，返回记录到DataTable集合中
            </summary>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.FindToDataTableWithPager(System.String,WHC.Pager.Entity.PagerInfo@)">
            <summary>
            根据查询条件，返回记录到DataTable集合中
            </summary>
            <param name="condition">查询条件</param>
            <param name="pagerInfo">分页条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.FindToDataTableWithPager2(System.String,WHC.Pager.Entity.PagerInfo@,System.String,System.Boolean)">
            <summary>
            根据条件查询数据库,并返回DataTable集合(用于分页数据显示)
            </summary>
            <param name="condition">查询的条件</param>
            <param name="pagerInfo">分页实体</param>
            <param name="fieldToSort">排序字段</param>
            <param name="desc">是否降序</param>
            <returns>指定DataTable的集合</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.FindByView(System.String,System.String)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.FindByView2(System.String,System.String,System.String,System.Boolean)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="sortField">排序字段</param>
            <param name="isDescending">是否为降序</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.FindByViewWithPager(System.String,System.String,System.String,System.Boolean,WHC.Pager.Entity.PagerInfo)">
            <summary>
            根据条件，从视图里面获取记录
            </summary>
            <param name="viewName">视图名称</param>
            <param name="condition">查询条件</param>
            <param name="sortField">排序字段</param>
            <param name="isDescending">是否为降序</param>
            <param name="pagerInfo">分页条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetRecordCount2(System.String)">
            <summary>
            获取表的所有记录数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetRecordCount">
            <summary>
            获取表的所有记录数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.IsExistKey(System.String,System.Object)">
            <summary>
            查询数据库,检查是否存在指定键值的对象
            </summary>
            <param name="fieldName">指定的属性名</param>
            <param name="key">指定的值</param>
            <returns>存在则返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.IsExistRecord(System.String)">
            <summary>
            根据condition条件，判断是否存在记录
            </summary>
            <param name="condition">查询的条件</param>
            <returns>如果存在返回True，否则False</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.Delete(System.String)">
            <summary>
            根据指定对象的ID,从数据库中删除指定对象(用于字符型主键)
            </summary>
            <param name="key">指定对象的ID</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.Delete2(System.Int32)">
            <summary>
            根据指定对象的ID,从数据库中删除指定对象(用于整型主键)
            </summary>
            <param name="key">指定对象的ID</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.DeleteByIds(System.String)">
            <summary>
            删除多个ID的记录
            </summary>
            <param name="ids">多个id组合，逗号分开（1,2,3,4,5）</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.DeleteByCondition(System.String)">
            <summary>
            根据指定条件,从数据库中删除指定对象
            </summary>
            <param name="condition">删除记录的条件语句</param>
            <returns>执行成功返回<c>true</c>，否则为<c>false</c>。</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetFieldList(System.String)">
            <summary>
            获取字段列表
            </summary>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetFieldListByCondition(System.String,System.String)">
            <summary>
            根据条件，获取某字段数据字典列表
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="condition">查询的条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetFieldTypeList">
            <summary>
            获取表的字段名称和数据类型列表。
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetColumnNameAlias">
            <summary>
            获取字段中文别名（用于界面显示）的字典集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.GetReportData(System.String,System.String)">
            <summary>
            获取指定字段的报表数据
            </summary>
            <param name="fieldName">表字段</param>
            <param name="condition">查询条件</param>
            <returns></returns>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.BaseApiService`1.SignatureInfo">
            <summary>
            设置的接口访问签名信息（每次获取自动从缓存里面取）
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.BaseApiService`1.ConfigurationPath">
            <summary>
            构建属性，方便在值变化的时候，重新设置AppConfig属性
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.Facade.BaseApiService`1.DictionarySort">
            <summary>
            字典排序对比器
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.BaseApiService`1.DictionarySort.Compare(System.Object,System.Object)">
            <summary>
            对比两个数值
            </summary>
            <returns></returns>
        </member>
        <member name="T:WHC.Framework.ControlUtil.Facade.JsonHelper`1">
            <summary>
            Json字符串操作辅助类
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.JsonHelper`1.VerifyErrorCode(System.String)">
            <summary>
            检查返回的记录，如果返回没有错误，或者结果提示成功，则不抛出异常
            </summary>
            <param name="content">返回的结果</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.JsonHelper`1.ConvertJson(System.String)">
            <summary>
            转换Json字符串到具体的对象
            </summary>
            <param name="url">返回Json数据的链接地址</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.JsonHelper`1.ConvertJson(System.String,System.String)">
            <summary>
            转换Json字符串到具体的对象
            </summary>
            <param name="url">返回Json数据的链接地址</param>
            <param name="postData">POST提交的数据</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.JsonHelper`1.ConvertString(System.String)">
            <summary>
            转换Json字符串到具体的对象
            </summary>
            <param name="url">返回Json数据的链接地址</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.JsonHelper`1.ConvertString(System.String,System.String)">
            <summary>
            转换Json字符串到具体的对象
            </summary>
            <param name="url">返回Json数据的链接地址</param>
            <param name="postData">POST提交的数据</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.JsonHelper`1.PostFile(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            提交文件并解析返回的结果
            </summary>
            <param name="url">提交文件数据的链接地址</param>
            <param name="file">文件地址</param>
            <param name="nvc">名称集合对象</param>
            <returns></returns>
        </member>
        <member name="T:WHC.Framework.ControlUtil.Facade.SignatureHelper">
            <summary>
            Web API签名操作的辅助类
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.SignatureHelper.GetSignatureUrl(System.String,System.String,System.String)">
            <summary>
            根据当前时间和随机数，生成签名字符串的URL
            </summary>
            <param name="appId">应用ID</param>
            <param name="appSecret">渠道接入秘钥</param>
            <param name="token">访问令牌</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.Facade.SignatureHelper.SignatureString(System.String,System.String,System.String)">
            <summary>
            生成签名字符串
            </summary>
            <param name="appSecret">渠道接入秘钥</param>
            <param name="timestamp">时间戳</param>
            <param name="nonce">随机数</param>
        </member>
        <member name="T:WHC.Framework.ControlUtil.Facade.SignatureHelper.DictionarySort">
            <summary>
            字典排序对比器
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.Facade.SignatureInfo">
            <summary>
            签名信息
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.SignatureInfo.appid">
            <summary>
            应用ID
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.SignatureInfo.appsecret">
            <summary>
            应用秘钥
            </summary>
        </member>
        <member name="P:WHC.Framework.ControlUtil.Facade.SignatureInfo.token">
            <summary>
            访问令牌
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.ADSLDialerUtil">
            <summary>
            ADSL拨号操作辅助类
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.ADSLDialerUtil.Connect(System.String)">
            <summary>
            测试拨号连接
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.ADSLDialerUtil.DisConnect">
            <summary>
            断开网络连接
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.ADSLDialerUtil.ReConnect(System.String)">
            <summary>
            重新链接
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.ADSLDialerUtil.GetNewIP(System.String)">
            <summary>
            获取最新的IP
            </summary>
            <param name="EntryId"></param>
            <returns></returns>
        </member>
        <member name="E:WHC.Framework.ControlUtil.ADSLDialerUtil.OnHandle">
            <summary>
            提示操作事件
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.NPOIUtils">
            <summary>
            NPOI操作Excel的工具类(也可以参考NPOIHelper）
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.NPOIUtils.DataTableToExcel(System.Data.DataTable)">
            <summary>
            数据表导入到Excel中
            </summary>
            <param name="SourceTable">数据表</param>
            <returns>Excel文件流</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.NPOIUtils.DataTableToExcel(System.Data.DataTable,System.String)">
            <summary>
            数据表导入到Excel中
            </summary>
            <param name="SourceTable">数据表</param>
            <param name="FileName">Excel文件</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.NPOIUtils.DataTableToExcel(System.Data.DataTable,System.IO.Stream,System.String,System.Int32)">
            <summary>
            将数据导入到Excel中(通过制定格式的模板)
            </summary>
            <param name="sourceTable"></param>
            <param name="excelTemplate"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.NPOIUtils.ExcelToDataTable(System.IO.Stream,System.String,System.Int32)">
            <summary>
            Excel导入数据表
            </summary>
            <param name="ExcelFileStream">Excel文件流</param>
            <param name="SheetName">页签名</param>
            <param name="HeaderRowIndex">列头行的行号</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.NPOIUtils.ExcelToDataTable(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Excel导入数据表
            </summary>
            <param name="ExcelFileStream">Excel文件流</param>
            <param name="SheetIndex">页签序号</param>
            <param name="HeaderRowIndex">列头行的行号</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.NPOIUtils.ExcelToDataTable(System.String,System.String,System.Int32)">
            <summary>
            Excel导入数据表
            </summary>
            <param name="ExcelFileName">Excel文件名</param>
            <param name="SheetName">页签名</param>
            <param name="HeaderRowIndex">列头行的行号</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.NPOIUtils.ExcelToDataTable(System.String,System.Int32,System.Int32)">
            <summary>
            Excel导入数据表
            </summary>
            <param name="ExcelFileName">Excel文件名</param>
            <param name="SheetIndex">页签序号</param>
            <param name="HeaderRowIndex">列头行的行号</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.NPOIUtils.SheetToDataTable(NPOI.SS.UserModel.ISheet,System.Int32)">
            <summary>
            Sheet页导入数据表
            </summary>
            <param name="sheet">页签对象</param>
            <param name="HeaderRowIndex">列头行的序号</param>
            <returns></returns>
        </member>
        <member name="T:WHC.Framework.Commons.LogHelper">
            <summary>
            Log4Net日志记录辅助类
            </summary>
        </member>
        <member name="M:WHC.Framework.Commons.LogHelper.Debug(System.Object)">
            <summary>
            记录调试信息
            </summary>
            <param name="ex">信息</param>
        </member>
        <member name="M:WHC.Framework.Commons.LogHelper.Warn(System.Object)">
            <summary>
            记录警告信息
            </summary>
            <param name="ex">信息</param>
        </member>
        <member name="M:WHC.Framework.Commons.LogHelper.Error(System.Object)">
            <summary>
            记录错误信息
            </summary>
            <param name="ex">信息</param>
        </member>
        <member name="M:WHC.Framework.Commons.LogHelper.Info(System.Object)">
            <summary>
            记录重要提示信息
            </summary>
            <param name="ex">信息</param>
        </member>
        <member name="M:WHC.Framework.Commons.LogHelper.Debug(System.Object,System.Exception)">
            <summary>
            记录信息和异常信息
            </summary>
            <param name="message">错误信息</param>
            <param name="ex">异常对象</param>
        </member>
        <member name="M:WHC.Framework.Commons.LogHelper.Warn(System.Object,System.Exception)">
            <summary>
            记录信息和异常信息
            </summary>
            <param name="message">错误信息</param>
            <param name="ex">异常对象</param>
        </member>
        <member name="M:WHC.Framework.Commons.LogHelper.Error(System.Object,System.Exception)">
            <summary>
            记录信息和异常信息
            </summary>
            <param name="message">错误信息</param>
            <param name="ex">异常对象</param>
        </member>
        <member name="M:WHC.Framework.Commons.LogHelper.Info(System.Object,System.Exception)">
            <summary>
            记录信息和异常信息
            </summary>
            <param name="message">错误信息</param>
            <param name="ex">异常对象</param>
        </member>
        <member name="T:WHC.Framework.ControlUtil.NewtonsoftJsonHelper">
            <summary>
            基于Newtonsoft.Json.dll的Json转换辅助类
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.NewtonsoftJsonHelper.ToJson(System.Object)">
            <summary>
            把对象为json字符串
            </summary>
            <param name="obj">待序列号对象</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.NewtonsoftJsonHelper.JsonDate(System.Object)">
            <summary>
            返回处理过的时间（处理后格式yyyy-MM-dd HH:mm:ss）的Json字符串
            </summary>
            <param name="date">包含日期的类对象实例</param>
            <returns></returns>
        </member>
        <member name="T:WHC.Framework.ControlUtil.NPOIHelper">
            <summary>
            利用NPOI类库，实现对Excel进行操作的辅助类
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.NPOIHelper.ExportEasy(System.Data.DataTable,System.String)">
            <summary>
            导出表格数据到Excel文档中
            </summary>
            <param name="dtSource">表格数据</param>
            <param name="strFileName">Excel文件路径</param>
            <remarks>NPOI认为Excel的第一个单元格是：(0，0)</remarks>
        </member>
        <member name="M:WHC.Framework.ControlUtil.NPOIHelper.Export(System.Data.DataTable,System.String,System.String)">
            <summary>
            DataTable导出到Excel文件
            </summary>
            <param name="dtSource">源DataTable</param>
            <param name="strHeaderText">表头文本</param>
            <param name="strFileName">保存位置</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.NPOIHelper.Export(System.Data.DataTable,System.String)">
            <summary>
            DataTable导出到Excel的MemoryStream
            </summary>
            <param name="dtSource">源DataTable</param>
            <param name="strHeaderText">表头文本</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.NPOIHelper.Export(System.Data.DataTable,System.String,NPOI.HPSF.DocumentSummaryInformation,NPOI.HPSF.SummaryInformation)">
            <summary>
            DataTable导出到Excel的MemoryStream
            </summary>
            <param name="dtSource">源DataTable</param>
            <param name="strHeaderText">表头文本</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.NPOIHelper.ExportByWeb(System.Data.DataTable,System.String,System.String)">
            <summary>
            用于Web导出Excel
            </summary>
            <param name="dtSource">源DataTable</param>
            <param name="strHeaderText">表头文本</param>
            <param name="strFileName">文件名</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.NPOIHelper.Import(System.String)">
            <summary>
            读取excel
            默认第一行为标头
            </summary>
            <param name="strFileName">excel文档路径</param>
            <returns></returns>
        </member>
        <member name="T:WHC.Framework.ControlUtil.MyXlsHelper">
            <summary>
            使用MyXls操作Excel的辅助类
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.MyXlsHelper.Export(System.Data.DataTable,System.String)">
            <summary>
            把相关数据导出到Excel文件中
            </summary>
            <param name="dtSource">数据源内容</param>
            <param name="strFileName">导出的Excel文件名</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.MyXlsHelper.ExportEasy(System.Data.DataTable,System.String)">
            <summary>
            把相关数据导出到Excel文件中
            </summary>
            <param name="dtSource">数据源内容</param>
            <param name="strFileName">导出的Excel文件名</param>
        </member>
        <member name="T:WHC.Framework.ControlUtil.AsposeExcelTools">
            <summary>
            本辅助类主要用来简化对Aspose.Cells控件的使用，实现对Excel操作的辅助类
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeExcelTools.DataTableInsertToExcel(System.Data.DataTable,System.Collections.ArrayList,System.String,System.String@,System.Int32,System.Int32)">
            <summary>
            DataTabel转换成Excel文件
            </summary>
            <param name="datatable">DataTable对象</param>
            <param name="colNameList">返回的字段列表</param>
            <param name="fromfile">Excel文件的全路径</param>
            <param name="error">错误信息:返回错误信息，没有错误返回""</param>
            <param name="beginColumn">开始列的序号</param>
            <param name="beginRow">开始的行序号</param>
            <returns>true:函数正确执行 false:函数执行错误</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeExcelTools.DataTableToExcel(System.Data.DataTable,System.String,System.String@)">
            <summary>
            把DataTabel转换成Excel文件
            </summary>
            <param name="datatable">DataTable对象</param>
            <param name="filepath">目标文件路径,Excel文件的全路径</param>
            <param name="error">错误信息:返回错误信息，没有错误返回""</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeExcelTools.DataTableToExcel2(System.Data.DataTable,System.String,System.String@)">
            <summary>
            把DataTabel转换成Excel文件
            </summary>
            <param name="datatable">DataTable对象</param>
            <param name="filepath">目标文件路径,Excel文件的全路径</param>
            <param name="error">错误信息:返回错误信息，没有错误返回""</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeExcelTools.DataSetToExcel(System.Data.DataSet,System.String,System.String@)">
            <summary>
            DataSet导出到Excel文件
            默认导出第一页的数据
            </summary>
            <param name="dataset">DataSet</param>
            <param name="filepath">Excel文件的全路径</param>
            <param name="error">错误信息:返回错误信息，没有错误返回""</param>
            <returns>true:函数正确执行 false:函数执行错误</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeExcelTools.ExcelFileToDataTable(System.String,System.Data.DataTable@,System.String@)">
            <summary>
            Excel文件转换为DataTable（第一个sheet）
            </summary>
            <param name="filepath">Excel文件的全路径</param>
            <param name="datatable">DataTable:返回值</param>
            <param name="error">错误信息:返回错误信息，没有错误返回""</param>
            <returns>true:函数正确执行 false:函数执行错误</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeExcelTools.ExcelFileToDataTable(System.String,System.Data.DataTable@,System.Boolean,System.String@)">
            <summary>
            Excel文件转换为DataTable.
            </summary>
            <param name="filepath">Excel文件的全路径</param>
            <param name="datatable">DataTable:返回值</param>
            <param name="error">错误信息:返回错误信息，没有错误返回""</param>
            <returns>true:函数正确执行 false:函数执行错误</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeExcelTools.ExcelFileToDataTables(System.String,System.Data.DataTable[]@,System.String@)">
            <summary>
            把所有Sheet里面的内容，分别导入到不同的DataTable对象里面
            </summary>
            <param name="filepath">Excel文件的全路径</param>
            <param name="datatables">DataTable对象集合</param>
            <param name="error">错误信息:返回错误信息，没有错误返回""</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeExcelTools.ExcelFileToDataTables(System.String,System.Data.DataTable[]@,System.Boolean,System.String@)">
            <summary>
            把所有Sheet里面的内容，分别导入到不同的DataTable对象里面
            </summary>
            <param name="filepath">Excel文件的全路径</param>
            <param name="datatables">DataTable对象集合</param>
            <param name="error">错误信息:返回错误信息，没有错误返回""</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeExcelTools.ExcelFileToDataTable(System.String,System.Data.DataTable@,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.String@)">
            <summary>
            Excel文件转换为DataTable.(指定开始行列，以及导入的记录行数）
            </summary>
            <param name="filepath">Excel文件的全路径</param>
            <param name="datatable">DataTable:返回值</param>
            <param name="iFirstRow">起始行</param>
            <param name="iFirstCol">起始列</param>
            <param name="rowNum">导入行数</param>
            <param name="colNum">列数</param>
            <param name="error">错误信息:返回错误信息，没有错误返回""</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeExcelTools.ExcelFileToDataSet(System.String,System.Data.DataSet@,System.String@)">
            <summary>
            Excel文件转换为DataSet.
            </summary>
            <param name="filepath">Excel文件的全路径</param>
            <param name="dataset">DataSet:返回值</param>
            <param name="error">错误信息:返回错误信息，没有错误返回""</param>
            <returns>true:函数正确执行 false:函数执行错误</returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeExcelTools.GetPicturesFromExcelFile(System.String,Aspose.Cells.Drawing.PictureCollection[]@,System.String@)">
            <summary>
            获取Excel文件里面的图片，并把图片存储到图片对象列表中
            </summary>
            <param name="filepath">Excel文件的全路径</param>
            <param name="pictures">图片对象列表</param>
            <param name="error">错误信息:返回错误信息，没有错误返回""</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeExcelTools.ExcelFileToLists(System.String,System.Collections.IList[]@,System.String@)">
            <summary>
            把Excel文件内容导入到List对象
            </summary>
            <param name="filepath">Excel文件的全路径</param>
            <param name="lists">列表对象</param>
            <param name="error">错误信息:返回错误信息，没有错误返回""</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeExcelTools.ListsToExcelFile(System.String,System.Collections.IList[],System.String@)">
            <summary>
            把列表导出到Excle文件
            </summary>
            <param name="filepath">Excel文件的全路径</param>
            <param name="lists">列表对象</param>
            <param name="error">错误信息:返回错误信息，没有错误返回""</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeExcelTools.ExportWithDataSource(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            绑定数据源到指定的报表模板中，并导出Excel文件
            </summary>
            <param name="templateFile">模板文件路径</param>
            <param name="saveFileName">保存的文件名称,如a.xls</param>
            <param name="datasource">待绑定的数据源</param> 
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeExcelTools.WebExportWithDataSource(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            绑定数据源到指定的报表模板中，在Web环境中导出Excel文件
            </summary>
            <param name="templateFile">模板文件路径</param>
            <param name="saveFileName">保存的文件名称,如a.xls</param>
            <param name="datasource">待绑定的数据源</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeExcelTools.ExportWithReplace(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            根据键值对列表的替换模板内容，导出Excel文件。
            </summary>
            <param name="templateFile">模板文件路径</param>
            <param name="saveFileName">保存的文件名称,如a.xls</param>
            <param name="dictReplace">待替换内容和替换值的键值对</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeExcelTools.WebExportWithReplace(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            根据键值对列表的替换模板内容，在Web环境中导出Excel文件。
            </summary>
            <param name="templateFile">模板文件路径</param>
            <param name="saveFileName">保存的文件名称,如a.xls</param>
            <param name="dictReplace">待替换内容和替换值的键值对</param>
        </member>
        <member name="T:WHC.Framework.ControlUtil.AsposeWordTools">
            <summary>
            本辅助类主要用来简化对Aspose.Word控件的使用，提供导出Word文档的操作
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeWordTools.ExportWithBookMark(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            根据列表的书签引用，导出Word文件。
            </summary>
            <param name="templateFile">模板文件</param>
            <param name="saveFileName">要保存的文件名称,如a.doc</param>
            <param name="dictBookMark">书签键值列表</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeWordTools.WebExportWithBookMark(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            根据列表的书签引用，在Web环境中导出Word文件。
            </summary>
            <param name="templateFile">模板文件（相对目录）</param>
            <param name="saveFileName">要保存的文件名称,如a.doc</param>
            <param name="dictBookMark">书签键值列表</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeWordTools.ExportWithReplace(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            根据键值对列表的替换模板内容，导出Word文件。
            </summary>
            <param name="templateFile">模板文件</param>
            <param name="saveFileName">要保存的文件名称,如a.doc</param>
            <param name="dictReplace">待替换内容和替换值的键值对</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.AsposeWordTools.WebExportWithReplace(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            根据键值对列表的替换模板内容，在Web环境中导出Word文件。
            </summary>
            <param name="templateFile">模板文件</param>
            <param name="saveFileName">要保存的文件名称,如a.doc</param>
            <param name="dictReplace">待替换内容和替换值的键值对</param>
        </member>
        <member name="T:WHC.Framework.Commons.NVelocityHelper">
            <summary>
            基于NVelocity的模板文件生成辅助类
            </summary>
        </member>
        <member name="F:WHC.Framework.Commons.NVelocityHelper.KeyObjDict">
            <summary>
            存放键值的字典内容
            </summary>
        </member>
        <member name="M:WHC.Framework.Commons.NVelocityHelper.AddKeyValue(System.String,System.Object)">
            <summary>
            添加一个键值对象
            </summary>
            <param name="key">键，不可重复</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.Commons.NVelocityHelper.#ctor(System.String)">
            <summary>
            参数化构造函数，根据模板文件构造相应的对象，并初始化
            </summary>
            <param name="templateFile">模板文件</param>
        </member>
        <member name="M:WHC.Framework.Commons.NVelocityHelper.#ctor">
            <summary>
            默认构造函数，用于字符串对象的合并
            </summary>
        </member>
        <member name="M:WHC.Framework.Commons.NVelocityHelper.ExecuteFile">
             <summary>
            根据模板创建输出的文件,并返回生成的文件路径
             </summary>
        </member>
        <member name="M:WHC.Framework.Commons.NVelocityHelper.ExecuteString">
            <summary>
            根据模板输出字符串内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.Commons.NVelocityHelper.ExecuteMergeString(System.String)">
            <summary>
            合并字符串的内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.Commons.NVelocityHelper.InitTemplateEngine">
            <summary>
            初始化模板引擎
            </summary>
        </member>
        <member name="M:WHC.Framework.Commons.NVelocityHelper.InitContext">
            <summary>
            初始化上下文的内容
            </summary>
        </member>
        <member name="M:WHC.Framework.Commons.NVelocityHelper.GetFileNameFromTemplate(System.String)">
            <summary>
            从模板文件名称获取输出文件名的方法
            </summary>
            <param name="templateFileName">带后缀名的模板文件名</param>
            <returns>输出的文件名(无后缀名)</returns>
        </member>
        <member name="M:WHC.Framework.Commons.NVelocityHelper.GetFilePath(System.String,System.String)">
            <summary>
            Gets the sourcefile path according the mainSetting values. End by slash char("/").
            </summary>
            <param name="outputDir">The output directory.</param>
            <param name="rootNameSpace">The root namespace of the project.</param>
            <returns>The valid directory path end by slash("/").</returns>
        </member>
        <member name="M:WHC.Framework.Commons.NVelocityHelper.CheckEndBySlash(System.String)">
            <summary>
            确保路径以"/"结束
            </summary>
            <param name="pathName">路径名称</param>
            <returns>以"/"结束德路径名称</returns>
        </member>
        <member name="P:WHC.Framework.Commons.NVelocityHelper.DirectoryOfOutput">
            <summary>
            输出文件的文件夹名称, 如"Entity","Common"等
            </summary>
        </member>
        <member name="P:WHC.Framework.Commons.NVelocityHelper.FileNameOfOutput">
            <summary>
            输出的文件名称. 如果想输出的文件为 "A.cs", 那么文件名为"A".
            默认的文件名称为模板文件的名称,没有后缀名.
            </summary>
        </member>
        <member name="P:WHC.Framework.Commons.NVelocityHelper.FileExtension">
            <summary>
            输出的文件后缀名,如".cs"。
            </summary>
        </member>
        <member name="T:WHC.Framework.ControlUtil.ZipUtility">
            <summary>
            使用ICSharpCode.SharpZipLib进行文件（包括文件夹）压缩的辅助类
            </summary>
        </member>
        <member name="M:WHC.Framework.ControlUtil.ZipUtility.ZipFiles(System.Collections.Generic.List{System.String},System.IO.Stream,System.String)">
            <summary>
            压缩指定文件列表到一个指定的内存流里面，可设置密码
            </summary>
            <param name="fileList">文件路径列表</param>
            <param name="stream">指定的内存流</param>
            <param name="password">压缩密码</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.ZipUtility.ZipFiles(System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            压缩指定文件列表到一个指定的压缩文件里面，可设置密码
            </summary>
            <param name="fileList">文件路径列表</param>
            <param name="outputPathAndFile">输出的压缩文件全名</param>
            <param name="password">压缩密码</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.ZipUtility.ZipFiles(System.String,System.String,System.String)">
            <summary>
            压缩文件中的文件，可设置密码
            </summary>
            <param name="inputFolderPath">输入的文件夹</param>
            <param name="outputPathAndFile">输出的压缩文件全名</param>
            <param name="password">压缩密码</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.ZipUtility.GenerateFileList(System.String)">
            <summary>
            根据文件夹生成文件列表
            </summary>
            <param name="Dir">指定文件夹</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.ZipUtility.UnZipFiles(System.String,System.String,System.String,System.Boolean)">
            <summary>
            解压文件到指定的目录，可设置密码、删除原文件等
            </summary>
            <param name="zipPathAndFile">压缩文件全名</param>
            <param name="outputFolder">解压输出文件目录</param>
            <param name="password">解压密码</param>
            <param name="deleteZipFile">是否删除原文件（压缩文件）</param>
        </member>
        <member name="M:WHC.Framework.ControlUtil.ZipUtility.ZipFile(System.String,System.String)">
            <summary>
            压缩文件
            </summary>
            <param name="fileToZip">待压缩文件路径</param>
            <param name="zipedFile">压缩后文件路径</param>
            <returns></returns>
        </member>
        <member name="M:WHC.Framework.ControlUtil.ZipUtility.UnZipFile(System.String,System.String)">
            <summary>
            解压缩以后的文件名和路径，压缩前的路径
            </summary>
            <param name="zipFile">压缩的文件路径</param>
            <param name="targetDirectory">解压后的文件路径</param>
            <returns></returns>
        </member>
    </members>
</doc>
